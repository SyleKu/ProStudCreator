#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProStudCreator
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-ProStudCreator-20140818043155")]
	public partial class ProStudentCreatorDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertProjectTeamSize(ProjectTeamSize instance);
    partial void UpdateProjectTeamSize(ProjectTeamSize instance);
    partial void DeleteProjectTeamSize(ProjectTeamSize instance);
    partial void InsertProjectType(ProjectType instance);
    partial void UpdateProjectType(ProjectType instance);
    partial void DeleteProjectType(ProjectType instance);
    partial void InsertExpert(Expert instance);
    partial void UpdateExpert(Expert instance);
    partial void DeleteExpert(Expert instance);
    partial void InsertBillingStatus(BillingStatus instance);
    partial void UpdateBillingStatus(BillingStatus instance);
    partial void DeleteBillingStatus(BillingStatus instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertSemester(Semester instance);
    partial void UpdateSemester(Semester instance);
    partial void DeleteSemester(Semester instance);
    partial void InsertAttachements(Attachements instance);
    partial void UpdateAttachements(Attachements instance);
    partial void DeleteAttachements(Attachements instance);
    partial void InsertUserDepartmentMap(UserDepartmentMap instance);
    partial void UpdateUserDepartmentMap(UserDepartmentMap instance);
    partial void DeleteUserDepartmentMap(UserDepartmentMap instance);
    partial void InsertTaskType(TaskType instance);
    partial void UpdateTaskType(TaskType instance);
    partial void DeleteTaskType(TaskType instance);
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    #endregion
		
		public ProStudentCreatorDBDataContext() : 
				base(global::ProStudCreator.Properties.Settings.Default.aspnet_ProStudCreator_20140818043155ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProStudentCreatorDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProStudentCreatorDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProStudentCreatorDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProStudentCreatorDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<ProjectTeamSize> ProjectTeamSizes
		{
			get
			{
				return this.GetTable<ProjectTeamSize>();
			}
		}
		
		public System.Data.Linq.Table<ProjectType> ProjectTypes
		{
			get
			{
				return this.GetTable<ProjectType>();
			}
		}
		
		public System.Data.Linq.Table<Expert> Experts
		{
			get
			{
				return this.GetTable<Expert>();
			}
		}
		
		public System.Data.Linq.Table<BillingStatus> BillingStatus
		{
			get
			{
				return this.GetTable<BillingStatus>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<Semester> Semester
		{
			get
			{
				return this.GetTable<Semester>();
			}
		}
		
		public System.Data.Linq.Table<Attachements> Attachements
		{
			get
			{
				return this.GetTable<Attachements>();
			}
		}
		
		public System.Data.Linq.Table<UserDepartmentMap> UserDepartmentMap
		{
			get
			{
				return this.GetTable<UserDepartmentMap>();
			}
		}
		
		public System.Data.Linq.Table<TaskType> TaskTypes
		{
			get
			{
				return this.GetTable<TaskType>();
			}
		}
		
		public System.Data.Linq.Table<Task> Tasks
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DepartmentName;
		
		private string _OUCode;
		
		private bool _ShowDefenseOnInfoPage;
		
		private bool _IMVS;
		
		private bool _i4DS;
		
		private bool _IIT;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<UserDepartmentMap> _UserDepartmentMap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnOUCodeChanging(string value);
    partial void OnOUCodeChanged();
    partial void OnShowDefenseOnInfoPageChanging(bool value);
    partial void OnShowDefenseOnInfoPageChanged();
    partial void OnIMVSChanging(bool value);
    partial void OnIMVSChanged();
    partial void Oni4DSChanging(bool value);
    partial void Oni4DSChanged();
    partial void OnIITChanging(bool value);
    partial void OnIITChanged();
    #endregion
		
		public Department()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._UserDepartmentMap = new EntitySet<UserDepartmentMap>(new Action<UserDepartmentMap>(this.attach_UserDepartmentMap), new Action<UserDepartmentMap>(this.detach_UserDepartmentMap));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OUCode
		{
			get
			{
				return this._OUCode;
			}
			set
			{
				if ((this._OUCode != value))
				{
					this.OnOUCodeChanging(value);
					this.SendPropertyChanging();
					this._OUCode = value;
					this.SendPropertyChanged("OUCode");
					this.OnOUCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDefenseOnInfoPage", DbType="bit")]
		public bool ShowDefenseOnInfoPage
		{
			get
			{
				return this._ShowDefenseOnInfoPage;
			}
			set
			{
				if ((this._ShowDefenseOnInfoPage != value))
				{
					this.OnShowDefenseOnInfoPageChanging(value);
					this.SendPropertyChanging();
					this._ShowDefenseOnInfoPage = value;
					this.SendPropertyChanged("ShowDefenseOnInfoPage");
					this.OnShowDefenseOnInfoPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMVS", DbType="bit")]
		public bool IMVS
		{
			get
			{
				return this._IMVS;
			}
			set
			{
				if ((this._IMVS != value))
				{
					this.OnIMVSChanging(value);
					this.SendPropertyChanging();
					this._IMVS = value;
					this.SendPropertyChanged("IMVS");
					this.OnIMVSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_i4DS", DbType="bit")]
		public bool i4DS
		{
			get
			{
				return this._i4DS;
			}
			set
			{
				if ((this._i4DS != value))
				{
					this.Oni4DSChanging(value);
					this.SendPropertyChanging();
					this._i4DS = value;
					this.SendPropertyChanged("i4DS");
					this.Oni4DSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IIT", DbType="bit")]
		public bool IIT
		{
			get
			{
				return this._IIT;
			}
			set
			{
				if ((this._IIT != value))
				{
					this.OnIITChanging(value);
					this.SendPropertyChanging();
					this._IIT = value;
					this.SendPropertyChanged("IIT");
					this.OnIITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Project", Storage="_Projects", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_UserDepartmentMap", Storage="_UserDepartmentMap", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<UserDepartmentMap> UserDepartmentMap
		{
			get
			{
				return this._UserDepartmentMap;
			}
			set
			{
				this._UserDepartmentMap.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
		
		private void attach_UserDepartmentMap(UserDepartmentMap entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_UserDepartmentMap(UserDepartmentMap entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectTeamSize")]
	public partial class ProjectTeamSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _Size1;
		
		private bool _Size2;
		
		private string _ExportValue;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Project> _Projects1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSize1Changing(bool value);
    partial void OnSize1Changed();
    partial void OnSize2Changing(bool value);
    partial void OnSize2Changed();
    partial void OnExportValueChanging(string value);
    partial void OnExportValueChanged();
    #endregion
		
		public ProjectTeamSize()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Projects1 = new EntitySet<Project>(new Action<Project>(this.attach_Projects1), new Action<Project>(this.detach_Projects1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size1", DbType="Bit NOT NULL")]
		public bool Size1
		{
			get
			{
				return this._Size1;
			}
			set
			{
				if ((this._Size1 != value))
				{
					this.OnSize1Changing(value);
					this.SendPropertyChanging();
					this._Size1 = value;
					this.SendPropertyChanged("Size1");
					this.OnSize1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size2", DbType="Bit NOT NULL")]
		public bool Size2
		{
			get
			{
				return this._Size2;
			}
			set
			{
				if ((this._Size2 != value))
				{
					this.OnSize2Changing(value);
					this.SendPropertyChanging();
					this._Size2 = value;
					this.SendPropertyChanged("Size2");
					this.OnSize2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ExportValue
		{
			get
			{
				return this._ExportValue;
			}
			set
			{
				if ((this._ExportValue != value))
				{
					this.OnExportValueChanging(value);
					this.SendPropertyChanging();
					this._ExportValue = value;
					this.SendPropertyChanged("ExportValue");
					this.OnExportValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectTeamSize_Project", Storage="_Projects", ThisKey="Id", OtherKey="P1TeamSizeId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectTeamSize_Project1", Storage="_Projects1", ThisKey="Id", OtherKey="P2TeamSizeId")]
		public EntitySet<Project> Projects1
		{
			get
			{
				return this._Projects1;
			}
			set
			{
				this._Projects1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.POneTeamSize = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.POneTeamSize = null;
		}
		
		private void attach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PTwoTeamSize = this;
		}
		
		private void detach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PTwoTeamSize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectTypes")]
	public partial class ProjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _P5;
		
		private bool _P6;
		
		private string _ExportValue;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Project> _Projects1;
		
		private EntitySet<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnP5Changing(bool value);
    partial void OnP5Changed();
    partial void OnP6Changing(bool value);
    partial void OnP6Changed();
    partial void OnExportValueChanging(string value);
    partial void OnExportValueChanged();
    #endregion
		
		public ProjectType()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Projects1 = new EntitySet<Project>(new Action<Project>(this.attach_Projects1), new Action<Project>(this.detach_Projects1));
			this._Project = new EntitySet<Project>(new Action<Project>(this.attach_Project), new Action<Project>(this.detach_Project));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P5", DbType="Bit NOT NULL")]
		public bool P5
		{
			get
			{
				return this._P5;
			}
			set
			{
				if ((this._P5 != value))
				{
					this.OnP5Changing(value);
					this.SendPropertyChanging();
					this._P5 = value;
					this.SendPropertyChanged("P5");
					this.OnP5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P6", DbType="Bit NOT NULL")]
		public bool P6
		{
			get
			{
				return this._P6;
			}
			set
			{
				if ((this._P6 != value))
				{
					this.OnP6Changing(value);
					this.SendPropertyChanging();
					this._P6 = value;
					this.SendPropertyChanged("P6");
					this.OnP6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ExportValue
		{
			get
			{
				return this._ExportValue;
			}
			set
			{
				if ((this._ExportValue != value))
				{
					this.OnExportValueChanging(value);
					this.SendPropertyChanging();
					this._ExportValue = value;
					this.SendPropertyChanged("ExportValue");
					this.OnExportValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project", Storage="_Projects", ThisKey="Id", OtherKey="P1TypeId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project1", Storage="_Projects1", ThisKey="Id", OtherKey="P2TypeId")]
		public EntitySet<Project> Projects1
		{
			get
			{
				return this._Projects1;
			}
			set
			{
				this._Projects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project2", Storage="_Project", ThisKey="Id", OtherKey="LogProjectTypeID")]
		public EntitySet<Project> Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				this._Project.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.POneType = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.POneType = null;
		}
		
		private void attach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PTwoType = this;
		}
		
		private void detach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PTwoType = null;
		}
		
		private void attach_Project(Project entity)
		{
			this.SendPropertyChanging();
			entity.LogProjectType = this;
		}
		
		private void detach_Project(Project entity)
		{
			this.SendPropertyChanging();
			entity.LogProjectType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Experts")]
	public partial class Expert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Mail;
		
		private string _Unternehmen;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnUnternehmenChanging(string value);
    partial void OnUnternehmenChanged();
    #endregion
		
		public Expert()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unternehmen", DbType="varchar(100)")]
		public string Unternehmen
		{
			get
			{
				return this._Unternehmen;
			}
			set
			{
				if ((this._Unternehmen != value))
				{
					this.OnUnternehmenChanging(value);
					this.SendPropertyChanging();
					this._Unternehmen = value;
					this.SendPropertyChanged("Unternehmen");
					this.OnUnternehmenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expert_Project", Storage="_Projects", ThisKey="id", OtherKey="LogExpertID")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Expert = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Expert = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BillingStatus")]
	public partial class BillingStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _DisplayName;
		
		private bool _ShowAddressOnInfoPage;
		
		private bool _RequiresProjectResults;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnShowAddressOnInfoPageChanging(bool value);
    partial void OnShowAddressOnInfoPageChanged();
    partial void OnRequiresProjectResultsChanging(bool value);
    partial void OnRequiresProjectResultsChanged();
    #endregion
		
		public BillingStatus()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowAddressOnInfoPage", DbType="bit")]
		public bool ShowAddressOnInfoPage
		{
			get
			{
				return this._ShowAddressOnInfoPage;
			}
			set
			{
				if ((this._ShowAddressOnInfoPage != value))
				{
					this.OnShowAddressOnInfoPageChanging(value);
					this.SendPropertyChanging();
					this._ShowAddressOnInfoPage = value;
					this.SendPropertyChanged("ShowAddressOnInfoPage");
					this.OnShowAddressOnInfoPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiresProjectResults", DbType="bit NOT NULL")]
		public bool RequiresProjectResults
		{
			get
			{
				return this._RequiresProjectResults;
			}
			set
			{
				if ((this._RequiresProjectResults != value))
				{
					this.OnRequiresProjectResultsChanging(value);
					this.SendPropertyChanging();
					this._RequiresProjectResults = value;
					this.SendPropertyChanged("RequiresProjectResults");
					this.OnRequiresProjectResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingStatus_Project", Storage="_Projects", ThisKey="Id", OtherKey="BillingStatusID")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.BillingStatus = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.BillingStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Creator;
		
		private string _ClientCompany;
		
		private string _ClientPerson;
		
		private string _ClientMail;
		
		private bool _TypeDesignUX;
		
		private bool _TypeHW;
		
		private bool _TypeCGIP;
		
		private bool _TypeMathAlg;
		
		private bool _TypeAppWeb;
		
		private bool _TypeDBBigData;
		
		private int _P1TypeId;
		
		private int _P1TeamSizeId;
		
		private System.Nullable<int> _P2TypeId;
		
		private System.Nullable<int> _P2TeamSizeId;
		
		private string _InitialPosition;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _Picture;
		
		private string _Objective;
		
		private string _ProblemStatement;
		
		private string _References;
		
		private string _Remarks;
		
		private string _Reservation1Name;
		
		private string _Reservation1Mail;
		
		private string _Reservation2Name;
		
		private string _Reservation2Mail;
		
		private bool _Important;
		
		private int _State;
		
		private int _DepartmentId;
		
		private bool _OverOnePage;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModificationDate;
		
		private System.DateTime _PublishedDate;
		
		private string _LastEditedBy;
		
		private int _ProjectNr;
		
		private bool _LanguageGerman;
		
		private bool _LanguageEnglish;
		
		private bool _DurationOneSemester;
		
		private bool _TypeSysSec;
		
		private bool _TypeSE;
		
		private string _ImgDescription;
		
		private System.Nullable<int> _PreviousProjectID;
		
		private string _ClientAddressStreet;
		
		private string _ClientAddressPostcode;
		
		private string _ClientAddressCity;
		
		private System.Nullable<int> _BillingStatusID;
		
		private System.Nullable<int> _LogProjectTypeID;
		
		private System.Nullable<byte> _LogProjectDuration;
		
		private string _LogStudent1Name;
		
		private string _LogStudent1Mail;
		
		private string _LogStudent2Name;
		
		private string _LogStudent2Mail;
		
		private System.Nullable<int> _LogExpertID;
		
		private bool _LogExpertPaid;
		
		private System.Nullable<System.DateTime> _LogDefenceDate;
		
		private string _LogDefenceRoom;
		
		private System.Nullable<int> _SemersterId;
		
		private System.Nullable<float> _LogGrade;
		
		private System.Nullable<bool> _LogLanguageEnglish;
		
		private System.Nullable<bool> _LogLanguageGerman;
		
		private string _ClientAddressTitle;
		
		private string _ClientAddressDepartment;
		
		private string _ClientReferenceNumber;
		
		private System.Nullable<float> _LogGradeStudent2;
		
		private System.Nullable<int> _Advisor1Id;
		
		private System.Nullable<int> _Advisor2Id;
		
		private bool _IsMainVersion;
		
		private System.Nullable<int> _ProjectId;
		
		private string _Ablehnungsgrund;
		
		private int _ClientType;
		
		private bool _UnderNDA;
		
		private bool _WebSummaryChecked;
		
		private bool _GradeSentToAdmin;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Attachements> _Attachements;
		
		private EntitySet<Task> _Tasks;
		
		private EntityRef<BillingStatus> _BillingStatus;
		
		private EntityRef<Expert> _Expert;
		
		private EntityRef<Project> _Project1;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<ProjectType> _POneType;
		
		private EntityRef<ProjectType> _PTwoType;
		
		private EntityRef<ProjectTeamSize> _POneTeamSize;
		
		private EntityRef<ProjectTeamSize> _PTwoTeamSize;
		
		private EntityRef<Semester> _Semesters;
		
		private EntityRef<ProjectType> _LogProjectType;
		
		private EntityRef<UserDepartmentMap> _Advisor1;
		
		private EntityRef<UserDepartmentMap> _Advisor2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(string value);
    partial void OnCreatorChanged();
    partial void OnClientCompanyChanging(string value);
    partial void OnClientCompanyChanged();
    partial void OnClientPersonChanging(string value);
    partial void OnClientPersonChanged();
    partial void OnClientMailChanging(string value);
    partial void OnClientMailChanged();
    partial void OnTypeDesignUXChanging(bool value);
    partial void OnTypeDesignUXChanged();
    partial void OnTypeHWChanging(bool value);
    partial void OnTypeHWChanged();
    partial void OnTypeCGIPChanging(bool value);
    partial void OnTypeCGIPChanged();
    partial void OnTypeMlAlgChanging(bool value);
    partial void OnTypeMlAlgChanged();
    partial void OnTypeAppWebChanging(bool value);
    partial void OnTypeAppWebChanged();
    partial void OnTypeDBBigDataChanging(bool value);
    partial void OnTypeDBBigDataChanged();
    partial void OnP1TypeIdChanging(int value);
    partial void OnP1TypeIdChanged();
    partial void OnP1TeamSizeIdChanging(int value);
    partial void OnP1TeamSizeIdChanged();
    partial void OnP2TypeIdChanging(System.Nullable<int> value);
    partial void OnP2TypeIdChanged();
    partial void OnP2TeamSizeIdChanging(System.Nullable<int> value);
    partial void OnP2TeamSizeIdChanged();
    partial void OnInitialPositionChanging(string value);
    partial void OnInitialPositionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnObjectiveChanging(string value);
    partial void OnObjectiveChanged();
    partial void OnProblemStatementChanging(string value);
    partial void OnProblemStatementChanged();
    partial void OnReferencesChanging(string value);
    partial void OnReferencesChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnReservation1NameChanging(string value);
    partial void OnReservation1NameChanged();
    partial void OnReservation1MailChanging(string value);
    partial void OnReservation1MailChanged();
    partial void OnReservation2NameChanging(string value);
    partial void OnReservation2NameChanged();
    partial void OnReservation2MailChanging(string value);
    partial void OnReservation2MailChanged();
    partial void OnImportantChanging(bool value);
    partial void OnImportantChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnOverOnePageChanging(bool value);
    partial void OnOverOnePageChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModificationDateChanging(System.DateTime value);
    partial void OnModificationDateChanged();
    partial void OnPublishedDateChanging(System.DateTime value);
    partial void OnPublishedDateChanged();
    partial void OnLastEditedByChanging(string value);
    partial void OnLastEditedByChanged();
    partial void OnProjectNrChanging(int value);
    partial void OnProjectNrChanged();
    partial void OnLanguageGermanChanging(bool value);
    partial void OnLanguageGermanChanged();
    partial void OnLanguageEnglishChanging(bool value);
    partial void OnLanguageEnglishChanged();
    partial void OnDurationOneSemesterChanging(bool value);
    partial void OnDurationOneSemesterChanged();
    partial void OnTypeSysSecChanging(bool value);
    partial void OnTypeSysSecChanged();
    partial void OnTypeSEChanging(bool value);
    partial void OnTypeSEChanged();
    partial void OnImgDescriptionChanging(string value);
    partial void OnImgDescriptionChanged();
    partial void OnPreviousProjectIDChanging(System.Nullable<int> value);
    partial void OnPreviousProjectIDChanged();
    partial void OnClientAddressStreetChanging(string value);
    partial void OnClientAddressStreetChanged();
    partial void OnClientAddressPostcodeChanging(string value);
    partial void OnClientAddressPostcodeChanged();
    partial void OnClientAddressCityChanging(string value);
    partial void OnClientAddressCityChanged();
    partial void OnBillingStatusIDChanging(System.Nullable<int> value);
    partial void OnBillingStatusIDChanged();
    partial void OnLogProjectTypeIDChanging(System.Nullable<int> value);
    partial void OnLogProjectTypeIDChanged();
    partial void OnLogProjectDurationChanging(System.Nullable<byte> value);
    partial void OnLogProjectDurationChanged();
    partial void OnLogStudent1NameChanging(string value);
    partial void OnLogStudent1NameChanged();
    partial void OnLogStudent1MailChanging(string value);
    partial void OnLogStudent1MailChanged();
    partial void OnLogStudent2NameChanging(string value);
    partial void OnLogStudent2NameChanged();
    partial void OnLogStudent2MailChanging(string value);
    partial void OnLogStudent2MailChanged();
    partial void OnLogExpertIDChanging(System.Nullable<int> value);
    partial void OnLogExpertIDChanged();
    partial void OnLogExpertPaidChanging(bool value);
    partial void OnLogExpertPaidChanged();
    partial void OnLogDefenceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDefenceDateChanged();
    partial void OnLogDefenceRoomChanging(string value);
    partial void OnLogDefenceRoomChanged();
    partial void OnSemesterIdChanging(System.Nullable<int> value);
    partial void OnSemesterIdChanged();
    partial void OnLogGradeStudent1Changing(System.Nullable<float> value);
    partial void OnLogGradeStudent1Changed();
    partial void OnLogLanguageEnglishChanging(System.Nullable<bool> value);
    partial void OnLogLanguageEnglishChanged();
    partial void OnLogLanguageGermanChanging(System.Nullable<bool> value);
    partial void OnLogLanguageGermanChanged();
    partial void OnClientAddressTitleChanging(string value);
    partial void OnClientAddressTitleChanged();
    partial void OnClientAddressDepartmentChanging(string value);
    partial void OnClientAddressDepartmentChanged();
    partial void OnClientReferenceNumberChanging(string value);
    partial void OnClientReferenceNumberChanged();
    partial void OnLogGradeStudent2Changing(System.Nullable<float> value);
    partial void OnLogGradeStudent2Changed();
    partial void OnAdvisor1IdChanging(System.Nullable<int> value);
    partial void OnAdvisor1IdChanged();
    partial void OnAdvisor2IdChanging(System.Nullable<int> value);
    partial void OnAdvisor2IdChanged();
    partial void OnIsMainVersionChanging(bool value);
    partial void OnIsMainVersionChanged();
    partial void OnBaseVersionIdChanging(System.Nullable<int> value);
    partial void OnBaseVersionIdChanged();
    partial void OnAblehnungsgrundChanging(string value);
    partial void OnAblehnungsgrundChanged();
    partial void OnClientTypeChanging(int value);
    partial void OnClientTypeChanged();
    partial void OnUnderNDAChanging(bool value);
    partial void OnUnderNDAChanged();
    partial void OnWebSummaryCheckedChanging(bool value);
    partial void OnWebSummaryCheckedChanged();
    partial void OnGradeSentToAdminChanging(bool value);
    partial void OnGradeSentToAdminChanged();
    #endregion
		
		public Project()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Attachements = new EntitySet<Attachements>(new Action<Attachements>(this.attach_Attachements), new Action<Attachements>(this.detach_Attachements));
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			this._BillingStatus = default(EntityRef<BillingStatus>);
			this._Expert = default(EntityRef<Expert>);
			this._Project1 = default(EntityRef<Project>);
			this._Department = default(EntityRef<Department>);
			this._POneType = default(EntityRef<ProjectType>);
			this._PTwoType = default(EntityRef<ProjectType>);
			this._POneTeamSize = default(EntityRef<ProjectTeamSize>);
			this._PTwoTeamSize = default(EntityRef<ProjectTeamSize>);
			this._Semesters = default(EntityRef<Semester>);
			this._LogProjectType = default(EntityRef<ProjectType>);
			this._Advisor1 = default(EntityRef<UserDepartmentMap>);
			this._Advisor2 = default(EntityRef<UserDepartmentMap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCompany", DbType="NVarChar(255) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public string ClientCompany
		{
			get
			{
				return this._ClientCompany;
			}
			set
			{
				if ((this._ClientCompany != value))
				{
					this.OnClientCompanyChanging(value);
					this.SendPropertyChanging();
					this._ClientCompany = value;
					this.SendPropertyChanged("ClientCompany");
					this.OnClientCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ClientPerson
		{
			get
			{
				return this._ClientPerson;
			}
			set
			{
				if ((this._ClientPerson != value))
				{
					this.OnClientPersonChanging(value);
					this.SendPropertyChanging();
					this._ClientPerson = value;
					this.SendPropertyChanged("ClientPerson");
					this.OnClientPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientMail", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ClientMail
		{
			get
			{
				return this._ClientMail;
			}
			set
			{
				if ((this._ClientMail != value))
				{
					this.OnClientMailChanging(value);
					this.SendPropertyChanging();
					this._ClientMail = value;
					this.SendPropertyChanged("ClientMail");
					this.OnClientMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDesignUX", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TypeDesignUX
		{
			get
			{
				return this._TypeDesignUX;
			}
			set
			{
				if ((this._TypeDesignUX != value))
				{
					this.OnTypeDesignUXChanging(value);
					this.SendPropertyChanging();
					this._TypeDesignUX = value;
					this.SendPropertyChanged("TypeDesignUX");
					this.OnTypeDesignUXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeHW", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TypeHW
		{
			get
			{
				return this._TypeHW;
			}
			set
			{
				if ((this._TypeHW != value))
				{
					this.OnTypeHWChanging(value);
					this.SendPropertyChanging();
					this._TypeHW = value;
					this.SendPropertyChanged("TypeHW");
					this.OnTypeHWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCGIP", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TypeCGIP
		{
			get
			{
				return this._TypeCGIP;
			}
			set
			{
				if ((this._TypeCGIP != value))
				{
					this.OnTypeCGIPChanging(value);
					this.SendPropertyChanging();
					this._TypeCGIP = value;
					this.SendPropertyChanged("TypeCGIP");
					this.OnTypeCGIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMathAlg", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TypeMlAlg
		{
			get
			{
				return this._TypeMathAlg;
			}
			set
			{
				if ((this._TypeMathAlg != value))
				{
					this.OnTypeMlAlgChanging(value);
					this.SendPropertyChanging();
					this._TypeMathAlg = value;
					this.SendPropertyChanged("TypeMlAlg");
					this.OnTypeMlAlgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeAppWeb", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TypeAppWeb
		{
			get
			{
				return this._TypeAppWeb;
			}
			set
			{
				if ((this._TypeAppWeb != value))
				{
					this.OnTypeAppWebChanging(value);
					this.SendPropertyChanging();
					this._TypeAppWeb = value;
					this.SendPropertyChanged("TypeAppWeb");
					this.OnTypeAppWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDBBigData", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool TypeDBBigData
		{
			get
			{
				return this._TypeDBBigData;
			}
			set
			{
				if ((this._TypeDBBigData != value))
				{
					this.OnTypeDBBigDataChanging(value);
					this.SendPropertyChanging();
					this._TypeDBBigData = value;
					this.SendPropertyChanged("TypeDBBigData");
					this.OnTypeDBBigDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P1TypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int P1TypeId
		{
			get
			{
				return this._P1TypeId;
			}
			set
			{
				if ((this._P1TypeId != value))
				{
					if (this._POneType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP1TypeIdChanging(value);
					this.SendPropertyChanging();
					this._P1TypeId = value;
					this.SendPropertyChanged("P1TypeId");
					this.OnP1TypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P1TeamSizeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int P1TeamSizeId
		{
			get
			{
				return this._P1TeamSizeId;
			}
			set
			{
				if ((this._P1TeamSizeId != value))
				{
					if (this._POneTeamSize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP1TeamSizeIdChanging(value);
					this.SendPropertyChanging();
					this._P1TeamSizeId = value;
					this.SendPropertyChanged("P1TeamSizeId");
					this.OnP1TeamSizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P2TypeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> P2TypeId
		{
			get
			{
				return this._P2TypeId;
			}
			set
			{
				if ((this._P2TypeId != value))
				{
					if (this._PTwoType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP2TypeIdChanging(value);
					this.SendPropertyChanging();
					this._P2TypeId = value;
					this.SendPropertyChanged("P2TypeId");
					this.OnP2TypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P2TeamSizeId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> P2TeamSizeId
		{
			get
			{
				return this._P2TeamSizeId;
			}
			set
			{
				if ((this._P2TeamSizeId != value))
				{
					if (this._PTwoTeamSize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP2TeamSizeIdChanging(value);
					this.SendPropertyChanging();
					this._P2TeamSizeId = value;
					this.SendPropertyChanged("P2TeamSizeId");
					this.OnP2TeamSizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialPosition", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InitialPosition
		{
			get
			{
				return this._InitialPosition;
			}
			set
			{
				if ((this._InitialPosition != value))
				{
					this.OnInitialPositionChanging(value);
					this.SendPropertyChanging();
					this._InitialPosition = value;
					this.SendPropertyChanged("InitialPosition");
					this.OnInitialPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture.Value;
			}
			set
			{
				if ((this._Picture.Value != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture.Value = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objective", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Objective
		{
			get
			{
				return this._Objective;
			}
			set
			{
				if ((this._Objective != value))
				{
					this.OnObjectiveChanging(value);
					this.SendPropertyChanging();
					this._Objective = value;
					this.SendPropertyChanged("Objective");
					this.OnObjectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemStatement", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ProblemStatement
		{
			get
			{
				return this._ProblemStatement;
			}
			set
			{
				if ((this._ProblemStatement != value))
				{
					this.OnProblemStatementChanging(value);
					this.SendPropertyChanging();
					this._ProblemStatement = value;
					this.SendPropertyChanged("ProblemStatement");
					this.OnProblemStatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[References]", Storage="_References", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string References
		{
			get
			{
				return this._References;
			}
			set
			{
				if ((this._References != value))
				{
					this.OnReferencesChanging(value);
					this.SendPropertyChanging();
					this._References = value;
					this.SendPropertyChanged("References");
					this.OnReferencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reservation1Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reservation1Name
		{
			get
			{
				return this._Reservation1Name;
			}
			set
			{
				if ((this._Reservation1Name != value))
				{
					this.OnReservation1NameChanging(value);
					this.SendPropertyChanging();
					this._Reservation1Name = value;
					this.SendPropertyChanged("Reservation1Name");
					this.OnReservation1NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reservation1Mail", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reservation1Mail
		{
			get
			{
				return this._Reservation1Mail;
			}
			set
			{
				if ((this._Reservation1Mail != value))
				{
					this.OnReservation1MailChanging(value);
					this.SendPropertyChanging();
					this._Reservation1Mail = value;
					this.SendPropertyChanged("Reservation1Mail");
					this.OnReservation1MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reservation2Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reservation2Name
		{
			get
			{
				return this._Reservation2Name;
			}
			set
			{
				if ((this._Reservation2Name != value))
				{
					this.OnReservation2NameChanging(value);
					this.SendPropertyChanging();
					this._Reservation2Name = value;
					this.SendPropertyChanged("Reservation2Name");
					this.OnReservation2NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reservation2Mail", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Reservation2Mail
		{
			get
			{
				return this._Reservation2Mail;
			}
			set
			{
				if ((this._Reservation2Mail != value))
				{
					this.OnReservation2MailChanging(value);
					this.SendPropertyChanging();
					this._Reservation2Mail = value;
					this.SendPropertyChanged("Reservation2Mail");
					this.OnReservation2MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Important", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Important
		{
			get
			{
				return this._Important;
			}
			set
			{
				if ((this._Important != value))
				{
					this.OnImportantChanging(value);
					this.SendPropertyChanging();
					this._Important = value;
					this.SendPropertyChanged("Important");
					this.OnImportantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverOnePage", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool OverOnePage
		{
			get
			{
				return this._OverOnePage;
			}
			set
			{
				if ((this._OverOnePage != value))
				{
					this.OnOverOnePageChanging(value);
					this.SendPropertyChanging();
					this._OverOnePage = value;
					this.SendPropertyChanged("OverOnePage");
					this.OnOverOnePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublishedDate
		{
			get
			{
				return this._PublishedDate;
			}
			set
			{
				if ((this._PublishedDate != value))
				{
					this.OnPublishedDateChanging(value);
					this.SendPropertyChanging();
					this._PublishedDate = value;
					this.SendPropertyChanged("PublishedDate");
					this.OnPublishedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastEditedBy
		{
			get
			{
				return this._LastEditedBy;
			}
			set
			{
				if ((this._LastEditedBy != value))
				{
					this.OnLastEditedByChanging(value);
					this.SendPropertyChanging();
					this._LastEditedBy = value;
					this.SendPropertyChanged("LastEditedBy");
					this.OnLastEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNr", DbType="Int NOT NULL")]
		public int ProjectNr
		{
			get
			{
				return this._ProjectNr;
			}
			set
			{
				if ((this._ProjectNr != value))
				{
					this.OnProjectNrChanging(value);
					this.SendPropertyChanging();
					this._ProjectNr = value;
					this.SendPropertyChanged("ProjectNr");
					this.OnProjectNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageGerman", DbType="Bit NOT NULL")]
		public bool LanguageGerman
		{
			get
			{
				return this._LanguageGerman;
			}
			set
			{
				if ((this._LanguageGerman != value))
				{
					this.OnLanguageGermanChanging(value);
					this.SendPropertyChanging();
					this._LanguageGerman = value;
					this.SendPropertyChanged("LanguageGerman");
					this.OnLanguageGermanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageEnglish", DbType="Bit NOT NULL")]
		public bool LanguageEnglish
		{
			get
			{
				return this._LanguageEnglish;
			}
			set
			{
				if ((this._LanguageEnglish != value))
				{
					this.OnLanguageEnglishChanging(value);
					this.SendPropertyChanging();
					this._LanguageEnglish = value;
					this.SendPropertyChanged("LanguageEnglish");
					this.OnLanguageEnglishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationOneSemester", DbType="Bit NOT NULL")]
		public bool DurationOneSemester
		{
			get
			{
				return this._DurationOneSemester;
			}
			set
			{
				if ((this._DurationOneSemester != value))
				{
					this.OnDurationOneSemesterChanging(value);
					this.SendPropertyChanging();
					this._DurationOneSemester = value;
					this.SendPropertyChanged("DurationOneSemester");
					this.OnDurationOneSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeSysSec", DbType="Bit NOT NULL")]
		public bool TypeSysSec
		{
			get
			{
				return this._TypeSysSec;
			}
			set
			{
				if ((this._TypeSysSec != value))
				{
					this.OnTypeSysSecChanging(value);
					this.SendPropertyChanging();
					this._TypeSysSec = value;
					this.SendPropertyChanged("TypeSysSec");
					this.OnTypeSysSecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeSE", DbType="Bit NOT NULL")]
		public bool TypeSE
		{
			get
			{
				return this._TypeSE;
			}
			set
			{
				if ((this._TypeSE != value))
				{
					this.OnTypeSEChanging(value);
					this.SendPropertyChanging();
					this._TypeSE = value;
					this.SendPropertyChanged("TypeSE");
					this.OnTypeSEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgDescription", DbType="NVarChar(100)")]
		public string ImgDescription
		{
			get
			{
				return this._ImgDescription;
			}
			set
			{
				if ((this._ImgDescription != value))
				{
					this.OnImgDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ImgDescription = value;
					this.SendPropertyChanged("ImgDescription");
					this.OnImgDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousProjectID", DbType="Int")]
		public System.Nullable<int> PreviousProjectID
		{
			get
			{
				return this._PreviousProjectID;
			}
			set
			{
				if ((this._PreviousProjectID != value))
				{
					if (this._Project1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreviousProjectIDChanging(value);
					this.SendPropertyChanging();
					this._PreviousProjectID = value;
					this.SendPropertyChanged("PreviousProjectID");
					this.OnPreviousProjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAddressStreet", DbType="NVarChar(100)")]
		public string ClientAddressStreet
		{
			get
			{
				return this._ClientAddressStreet;
			}
			set
			{
				if ((this._ClientAddressStreet != value))
				{
					this.OnClientAddressStreetChanging(value);
					this.SendPropertyChanging();
					this._ClientAddressStreet = value;
					this.SendPropertyChanged("ClientAddressStreet");
					this.OnClientAddressStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAddressPostcode", DbType="NVarChar(10)")]
		public string ClientAddressPostcode
		{
			get
			{
				return this._ClientAddressPostcode;
			}
			set
			{
				if ((this._ClientAddressPostcode != value))
				{
					this.OnClientAddressPostcodeChanging(value);
					this.SendPropertyChanging();
					this._ClientAddressPostcode = value;
					this.SendPropertyChanged("ClientAddressPostcode");
					this.OnClientAddressPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAddressCity", DbType="NVarChar(100)")]
		public string ClientAddressCity
		{
			get
			{
				return this._ClientAddressCity;
			}
			set
			{
				if ((this._ClientAddressCity != value))
				{
					this.OnClientAddressCityChanging(value);
					this.SendPropertyChanging();
					this._ClientAddressCity = value;
					this.SendPropertyChanged("ClientAddressCity");
					this.OnClientAddressCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingStatusID", DbType="Int")]
		public System.Nullable<int> BillingStatusID
		{
			get
			{
				return this._BillingStatusID;
			}
			set
			{
				if ((this._BillingStatusID != value))
				{
					if (this._BillingStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillingStatusIDChanging(value);
					this.SendPropertyChanging();
					this._BillingStatusID = value;
					this.SendPropertyChanged("BillingStatusID");
					this.OnBillingStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogProjectTypeID", DbType="Int")]
		public System.Nullable<int> LogProjectTypeID
		{
			get
			{
				return this._LogProjectTypeID;
			}
			set
			{
				if ((this._LogProjectTypeID != value))
				{
					if (this._LogProjectType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogProjectTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LogProjectTypeID = value;
					this.SendPropertyChanged("LogProjectTypeID");
					this.OnLogProjectTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogProjectDuration", DbType="TinyInt")]
		public System.Nullable<byte> LogProjectDuration
		{
			get
			{
				return this._LogProjectDuration;
			}
			set
			{
				if ((this._LogProjectDuration != value))
				{
					this.OnLogProjectDurationChanging(value);
					this.SendPropertyChanging();
					this._LogProjectDuration = value;
					this.SendPropertyChanged("LogProjectDuration");
					this.OnLogProjectDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogStudent1Name", DbType="NVarChar(100)")]
		public string LogStudent1Name
		{
			get
			{
				return this._LogStudent1Name;
			}
			set
			{
				if ((this._LogStudent1Name != value))
				{
					this.OnLogStudent1NameChanging(value);
					this.SendPropertyChanging();
					this._LogStudent1Name = value;
					this.SendPropertyChanged("LogStudent1Name");
					this.OnLogStudent1NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogStudent1Mail", DbType="NVarChar(100)")]
		public string LogStudent1Mail
		{
			get
			{
				return this._LogStudent1Mail;
			}
			set
			{
				if ((this._LogStudent1Mail != value))
				{
					this.OnLogStudent1MailChanging(value);
					this.SendPropertyChanging();
					this._LogStudent1Mail = value;
					this.SendPropertyChanged("LogStudent1Mail");
					this.OnLogStudent1MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogStudent2Name", DbType="NVarChar(100)")]
		public string LogStudent2Name
		{
			get
			{
				return this._LogStudent2Name;
			}
			set
			{
				if ((this._LogStudent2Name != value))
				{
					this.OnLogStudent2NameChanging(value);
					this.SendPropertyChanging();
					this._LogStudent2Name = value;
					this.SendPropertyChanged("LogStudent2Name");
					this.OnLogStudent2NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogStudent2Mail", DbType="NVarChar(100)")]
		public string LogStudent2Mail
		{
			get
			{
				return this._LogStudent2Mail;
			}
			set
			{
				if ((this._LogStudent2Mail != value))
				{
					this.OnLogStudent2MailChanging(value);
					this.SendPropertyChanging();
					this._LogStudent2Mail = value;
					this.SendPropertyChanged("LogStudent2Mail");
					this.OnLogStudent2MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogExpertID", DbType="Int")]
		public System.Nullable<int> LogExpertID
		{
			get
			{
				return this._LogExpertID;
			}
			set
			{
				if ((this._LogExpertID != value))
				{
					if (this._Expert.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogExpertIDChanging(value);
					this.SendPropertyChanging();
					this._LogExpertID = value;
					this.SendPropertyChanged("LogExpertID");
					this.OnLogExpertIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogExpertPaid", DbType="Bit")]
		public bool LogExpertPaid
		{
			get
			{
				return this._LogExpertPaid;
			}
			set
			{
				if ((this._LogExpertPaid != value))
				{
					this.OnLogExpertPaidChanging(value);
					this.SendPropertyChanging();
					this._LogExpertPaid = value;
					this.SendPropertyChanged("LogExpertPaid");
					this.OnLogExpertPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDefenceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDefenceDate
		{
			get
			{
				return this._LogDefenceDate;
			}
			set
			{
				if ((this._LogDefenceDate != value))
				{
					this.OnLogDefenceDateChanging(value);
					this.SendPropertyChanging();
					this._LogDefenceDate = value;
					this.SendPropertyChanged("LogDefenceDate");
					this.OnLogDefenceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDefenceRoom", DbType="NChar(10)")]
		public string LogDefenceRoom
		{
			get
			{
				return this._LogDefenceRoom;
			}
			set
			{
				if ((this._LogDefenceRoom != value))
				{
					this.OnLogDefenceRoomChanging(value);
					this.SendPropertyChanging();
					this._LogDefenceRoom = value;
					this.SendPropertyChanged("LogDefenceRoom");
					this.OnLogDefenceRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SemersterId", DbType="int")]
		public System.Nullable<int> SemesterId
		{
			get
			{
				return this._SemersterId;
			}
			set
			{
				if ((this._SemersterId != value))
				{
					if (this._Semesters.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSemesterIdChanging(value);
					this.SendPropertyChanging();
					this._SemersterId = value;
					this.SendPropertyChanged("SemesterId");
					this.OnSemesterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogGrade", DbType="float")]
		public System.Nullable<float> LogGradeStudent1
		{
			get
			{
				return this._LogGrade;
			}
			set
			{
				if ((this._LogGrade != value))
				{
					this.OnLogGradeStudent1Changing(value);
					this.SendPropertyChanging();
					this._LogGrade = value;
					this.SendPropertyChanged("LogGradeStudent1");
					this.OnLogGradeStudent1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogLanguageEnglish", DbType="bit")]
		public System.Nullable<bool> LogLanguageEnglish
		{
			get
			{
				return this._LogLanguageEnglish;
			}
			set
			{
				if ((this._LogLanguageEnglish != value))
				{
					this.OnLogLanguageEnglishChanging(value);
					this.SendPropertyChanging();
					this._LogLanguageEnglish = value;
					this.SendPropertyChanged("LogLanguageEnglish");
					this.OnLogLanguageEnglishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogLanguageGerman", DbType="bit")]
		public System.Nullable<bool> LogLanguageGerman
		{
			get
			{
				return this._LogLanguageGerman;
			}
			set
			{
				if ((this._LogLanguageGerman != value))
				{
					this.OnLogLanguageGermanChanging(value);
					this.SendPropertyChanging();
					this._LogLanguageGerman = value;
					this.SendPropertyChanged("LogLanguageGerman");
					this.OnLogLanguageGermanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAddressTitle", DbType="varchar(30)")]
		public string ClientAddressTitle
		{
			get
			{
				return this._ClientAddressTitle;
			}
			set
			{
				if ((this._ClientAddressTitle != value))
				{
					this.OnClientAddressTitleChanging(value);
					this.SendPropertyChanging();
					this._ClientAddressTitle = value;
					this.SendPropertyChanged("ClientAddressTitle");
					this.OnClientAddressTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientAddressDepartment", DbType="varchar(50)")]
		public string ClientAddressDepartment
		{
			get
			{
				return this._ClientAddressDepartment;
			}
			set
			{
				if ((this._ClientAddressDepartment != value))
				{
					this.OnClientAddressDepartmentChanging(value);
					this.SendPropertyChanging();
					this._ClientAddressDepartment = value;
					this.SendPropertyChanged("ClientAddressDepartment");
					this.OnClientAddressDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientReferenceNumber", DbType="varchar(50)")]
		public string ClientReferenceNumber
		{
			get
			{
				return this._ClientReferenceNumber;
			}
			set
			{
				if ((this._ClientReferenceNumber != value))
				{
					this.OnClientReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._ClientReferenceNumber = value;
					this.SendPropertyChanged("ClientReferenceNumber");
					this.OnClientReferenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogGradeStudent2", DbType="float")]
		public System.Nullable<float> LogGradeStudent2
		{
			get
			{
				return this._LogGradeStudent2;
			}
			set
			{
				if ((this._LogGradeStudent2 != value))
				{
					this.OnLogGradeStudent2Changing(value);
					this.SendPropertyChanging();
					this._LogGradeStudent2 = value;
					this.SendPropertyChanged("LogGradeStudent2");
					this.OnLogGradeStudent2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advisor1Id", DbType="int")]
		public System.Nullable<int> Advisor1Id
		{
			get
			{
				return this._Advisor1Id;
			}
			set
			{
				if ((this._Advisor1Id != value))
				{
					if (this._Advisor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvisor1IdChanging(value);
					this.SendPropertyChanging();
					this._Advisor1Id = value;
					this.SendPropertyChanged("Advisor1Id");
					this.OnAdvisor1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advisor2Id", DbType="int")]
		public System.Nullable<int> Advisor2Id
		{
			get
			{
				return this._Advisor2Id;
			}
			set
			{
				if ((this._Advisor2Id != value))
				{
					if (this._Advisor2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvisor2IdChanging(value);
					this.SendPropertyChanging();
					this._Advisor2Id = value;
					this.SendPropertyChanged("Advisor2Id");
					this.OnAdvisor2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMainVersion", DbType="bit NOT NULL")]
		public bool IsMainVersion
		{
			get
			{
				return this._IsMainVersion;
			}
			set
			{
				if ((this._IsMainVersion != value))
				{
					this.OnIsMainVersionChanging(value);
					this.SendPropertyChanging();
					this._IsMainVersion = value;
					this.SendPropertyChanged("IsMainVersion");
					this.OnIsMainVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="int")]
		public System.Nullable<int> BaseVersionId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnBaseVersionIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("BaseVersionId");
					this.OnBaseVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ablehnungsgrund", DbType="nvarchar(MAX)")]
		public string Ablehnungsgrund
		{
			get
			{
				return this._Ablehnungsgrund;
			}
			set
			{
				if ((this._Ablehnungsgrund != value))
				{
					this.OnAblehnungsgrundChanging(value);
					this.SendPropertyChanging();
					this._Ablehnungsgrund = value;
					this.SendPropertyChanged("Ablehnungsgrund");
					this.OnAblehnungsgrundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="int")]
		public int ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnderNDA", DbType="bit NOT NULL")]
		public bool UnderNDA
		{
			get
			{
				return this._UnderNDA;
			}
			set
			{
				if ((this._UnderNDA != value))
				{
					this.OnUnderNDAChanging(value);
					this.SendPropertyChanging();
					this._UnderNDA = value;
					this.SendPropertyChanged("UnderNDA");
					this.OnUnderNDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSummaryChecked", DbType="bit NOT NULL")]
		public bool WebSummaryChecked
		{
			get
			{
				return this._WebSummaryChecked;
			}
			set
			{
				if ((this._WebSummaryChecked != value))
				{
					this.OnWebSummaryCheckedChanging(value);
					this.SendPropertyChanging();
					this._WebSummaryChecked = value;
					this.SendPropertyChanged("WebSummaryChecked");
					this.OnWebSummaryCheckedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeSentToAdmin", DbType="bit NOT NULL")]
		public bool GradeSentToAdmin
		{
			get
			{
				return this._GradeSentToAdmin;
			}
			set
			{
				if ((this._GradeSentToAdmin != value))
				{
					this.OnGradeSentToAdminChanging(value);
					this.SendPropertyChanging();
					this._GradeSentToAdmin = value;
					this.SendPropertyChanged("GradeSentToAdmin");
					this.OnGradeSentToAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project", Storage="_Projects", ThisKey="Id", OtherKey="PreviousProjectID")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Attachements", Storage="_Attachements", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<Attachements> Attachements
		{
			get
			{
				return this._Attachements;
			}
			set
			{
				this._Attachements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task", Storage="_Tasks", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BillingStatus_Project", Storage="_BillingStatus", ThisKey="BillingStatusID", OtherKey="Id", IsForeignKey=true)]
		public BillingStatus BillingStatus
		{
			get
			{
				return this._BillingStatus.Entity;
			}
			set
			{
				BillingStatus previousValue = this._BillingStatus.Entity;
				if (((previousValue != value) 
							|| (this._BillingStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillingStatus.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._BillingStatus.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._BillingStatusID = value.Id;
					}
					else
					{
						this._BillingStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BillingStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expert_Project", Storage="_Expert", ThisKey="LogExpertID", OtherKey="id", IsForeignKey=true)]
		public Expert Expert
		{
			get
			{
				return this._Expert.Entity;
			}
			set
			{
				Expert previousValue = this._Expert.Entity;
				if (((previousValue != value) 
							|| (this._Expert.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Expert.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Expert.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._LogExpertID = value.id;
					}
					else
					{
						this._LogExpertID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Expert");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Project", Storage="_Project1", ThisKey="PreviousProjectID", OtherKey="Id", IsForeignKey=true)]
		public Project PreviousProject
		{
			get
			{
				return this._Project1.Entity;
			}
			set
			{
				Project previousValue = this._Project1.Entity;
				if (((previousValue != value) 
							|| (this._Project1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project1.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Project1.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._PreviousProjectID = value.Id;
					}
					else
					{
						this._PreviousProjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PreviousProject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Project", Storage="_Department", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project", Storage="_POneType", ThisKey="P1TypeId", OtherKey="Id", IsForeignKey=true)]
		public ProjectType POneType
		{
			get
			{
				return this._POneType.Entity;
			}
			set
			{
				ProjectType previousValue = this._POneType.Entity;
				if (((previousValue != value) 
							|| (this._POneType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POneType.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._POneType.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._P1TypeId = value.Id;
					}
					else
					{
						this._P1TypeId = default(int);
					}
					this.SendPropertyChanged("POneType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project1", Storage="_PTwoType", ThisKey="P2TypeId", OtherKey="Id", IsForeignKey=true)]
		public ProjectType PTwoType
		{
			get
			{
				return this._PTwoType.Entity;
			}
			set
			{
				ProjectType previousValue = this._PTwoType.Entity;
				if (((previousValue != value) 
							|| (this._PTwoType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTwoType.Entity = null;
						previousValue.Projects1.Remove(this);
					}
					this._PTwoType.Entity = value;
					if ((value != null))
					{
						value.Projects1.Add(this);
						this._P2TypeId = value.Id;
					}
					else
					{
						this._P2TypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PTwoType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectTeamSize_Project", Storage="_POneTeamSize", ThisKey="P1TeamSizeId", OtherKey="Id", IsForeignKey=true)]
		public ProjectTeamSize POneTeamSize
		{
			get
			{
				return this._POneTeamSize.Entity;
			}
			set
			{
				ProjectTeamSize previousValue = this._POneTeamSize.Entity;
				if (((previousValue != value) 
							|| (this._POneTeamSize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POneTeamSize.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._POneTeamSize.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._P1TeamSizeId = value.Id;
					}
					else
					{
						this._P1TeamSizeId = default(int);
					}
					this.SendPropertyChanged("POneTeamSize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectTeamSize_Project1", Storage="_PTwoTeamSize", ThisKey="P2TeamSizeId", OtherKey="Id", IsForeignKey=true)]
		public ProjectTeamSize PTwoTeamSize
		{
			get
			{
				return this._PTwoTeamSize.Entity;
			}
			set
			{
				ProjectTeamSize previousValue = this._PTwoTeamSize.Entity;
				if (((previousValue != value) 
							|| (this._PTwoTeamSize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTwoTeamSize.Entity = null;
						previousValue.Projects1.Remove(this);
					}
					this._PTwoTeamSize.Entity = value;
					if ((value != null))
					{
						value.Projects1.Add(this);
						this._P2TeamSizeId = value.Id;
					}
					else
					{
						this._P2TeamSizeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PTwoTeamSize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Semester_Project", Storage="_Semesters", ThisKey="SemesterId", OtherKey="Id", IsForeignKey=true)]
		public Semester Semester
		{
			get
			{
				return this._Semesters.Entity;
			}
			set
			{
				Semester previousValue = this._Semesters.Entity;
				if (((previousValue != value) 
							|| (this._Semesters.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Semesters.Entity = null;
						previousValue.Project.Remove(this);
					}
					this._Semesters.Entity = value;
					if ((value != null))
					{
						value.Project.Add(this);
						this._SemersterId = value.Id;
					}
					else
					{
						this._SemersterId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Semester");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project2", Storage="_LogProjectType", ThisKey="LogProjectTypeID", OtherKey="Id", IsForeignKey=true)]
		public ProjectType LogProjectType
		{
			get
			{
				return this._LogProjectType.Entity;
			}
			set
			{
				ProjectType previousValue = this._LogProjectType.Entity;
				if (((previousValue != value) 
							|| (this._LogProjectType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogProjectType.Entity = null;
						previousValue.Project.Remove(this);
					}
					this._LogProjectType.Entity = value;
					if ((value != null))
					{
						value.Project.Add(this);
						this._LogProjectTypeID = value.Id;
					}
					else
					{
						this._LogProjectTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LogProjectType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDepartmentMap_Project", Storage="_Advisor1", ThisKey="Advisor1Id", OtherKey="Id", IsForeignKey=true)]
		public UserDepartmentMap Advisor1
		{
			get
			{
				return this._Advisor1.Entity;
			}
			set
			{
				UserDepartmentMap previousValue = this._Advisor1.Entity;
				if (((previousValue != value) 
							|| (this._Advisor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advisor1.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Advisor1.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._Advisor1Id = value.Id;
					}
					else
					{
						this._Advisor1Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Advisor1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDepartmentMap_Project1", Storage="_Advisor2", ThisKey="Advisor2Id", OtherKey="Id", IsForeignKey=true)]
		public UserDepartmentMap Advisor2
		{
			get
			{
				return this._Advisor2.Entity;
			}
			set
			{
				UserDepartmentMap previousValue = this._Advisor2.Entity;
				if (((previousValue != value) 
							|| (this._Advisor2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advisor2.Entity = null;
						previousValue.Projects1.Remove(this);
					}
					this._Advisor2.Entity = value;
					if ((value != null))
					{
						value.Projects1.Add(this);
						this._Advisor2Id = value.Id;
					}
					else
					{
						this._Advisor2Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Advisor2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.PreviousProject = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.PreviousProject = null;
		}
		
		private void attach_Attachements(Attachements entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Attachements(Attachements entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Semester : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.DateTime _ProjectSubmit;
		
		private string _ProjectAllocation;
		
		private string _SubmissionIP5FullPartTime;
		
		private string _SubmissionIP5Accompanying;
		
		private string _SubmissionIP6Normal;
		
		private string _SubmissionIP6Variant2;
		
		private string _DefenseIP6;
		
		private string _DefenseIP6Alternative;
		
		private string _ExhibitionBachelorThesis;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _SemesterActiveUntil;
		
		private string _DefenseIP6BStart;
		
		private string _DefenseIP6BEnd;
		
		private EntitySet<Project> _Project;
		
		private EntitySet<Task> _Tasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnProjectSubmissionUntilChanging(System.DateTime value);
    partial void OnProjectSubmissionUntilChanged();
    partial void OnProjectAllocationChanging(string value);
    partial void OnProjectAllocationChanged();
    partial void OnSubmissionIP5FullPartTimeChanging(string value);
    partial void OnSubmissionIP5FullPartTimeChanged();
    partial void OnSubmissionIP5AccompanyingChanging(string value);
    partial void OnSubmissionIP5AccompanyingChanged();
    partial void OnSubmissionIP6NormalChanging(string value);
    partial void OnSubmissionIP6NormalChanged();
    partial void OnSubmissionIP6Variant2Changing(string value);
    partial void OnSubmissionIP6Variant2Changed();
    partial void OnDefenseIP6StartChanging(string value);
    partial void OnDefenseIP6StartChanged();
    partial void OnDefenseIP6EndChanging(string value);
    partial void OnDefenseIP6EndChanged();
    partial void OnExhibitionBachelorThesisChanging(string value);
    partial void OnExhibitionBachelorThesisChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDayBeforeNextSemesterChanging(System.Nullable<System.DateTime> value);
    partial void OnDayBeforeNextSemesterChanged();
    partial void OnDefenseIP6BStartChanging(string value);
    partial void OnDefenseIP6BStartChanged();
    partial void OnDefenseIP6BEndChanging(string value);
    partial void OnDefenseIP6BEndChanged();
    #endregion
		
		public Semester()
		{
			this._Project = new EntitySet<Project>(new Action<Project>(this.attach_Project), new Action<Project>(this.detach_Project));
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectSubmit", DbType="DateTime")]
		public System.DateTime ProjectSubmissionUntil
		{
			get
			{
				return this._ProjectSubmit;
			}
			set
			{
				if ((this._ProjectSubmit != value))
				{
					this.OnProjectSubmissionUntilChanging(value);
					this.SendPropertyChanging();
					this._ProjectSubmit = value;
					this.SendPropertyChanged("ProjectSubmissionUntil");
					this.OnProjectSubmissionUntilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectAllocation", DbType="NVarChar(50)", CanBeNull=false)]
		public string ProjectAllocation
		{
			get
			{
				return this._ProjectAllocation;
			}
			set
			{
				if ((this._ProjectAllocation != value))
				{
					this.OnProjectAllocationChanging(value);
					this.SendPropertyChanging();
					this._ProjectAllocation = value;
					this.SendPropertyChanged("ProjectAllocation");
					this.OnProjectAllocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionIP5FullPartTime", DbType="NVarChar(50)", CanBeNull=false)]
		public string SubmissionIP5FullPartTime
		{
			get
			{
				return this._SubmissionIP5FullPartTime;
			}
			set
			{
				if ((this._SubmissionIP5FullPartTime != value))
				{
					this.OnSubmissionIP5FullPartTimeChanging(value);
					this.SendPropertyChanging();
					this._SubmissionIP5FullPartTime = value;
					this.SendPropertyChanged("SubmissionIP5FullPartTime");
					this.OnSubmissionIP5FullPartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionIP5Accompanying", DbType="NVarChar(50)", CanBeNull=false)]
		public string SubmissionIP5Accompanying
		{
			get
			{
				return this._SubmissionIP5Accompanying;
			}
			set
			{
				if ((this._SubmissionIP5Accompanying != value))
				{
					this.OnSubmissionIP5AccompanyingChanging(value);
					this.SendPropertyChanging();
					this._SubmissionIP5Accompanying = value;
					this.SendPropertyChanged("SubmissionIP5Accompanying");
					this.OnSubmissionIP5AccompanyingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionIP6Normal", DbType="NVarChar(50)", CanBeNull=false)]
		public string SubmissionIP6Normal
		{
			get
			{
				return this._SubmissionIP6Normal;
			}
			set
			{
				if ((this._SubmissionIP6Normal != value))
				{
					this.OnSubmissionIP6NormalChanging(value);
					this.SendPropertyChanging();
					this._SubmissionIP6Normal = value;
					this.SendPropertyChanged("SubmissionIP6Normal");
					this.OnSubmissionIP6NormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubmissionIP6Variant2", DbType="NVarChar(50)")]
		public string SubmissionIP6Variant2
		{
			get
			{
				return this._SubmissionIP6Variant2;
			}
			set
			{
				if ((this._SubmissionIP6Variant2 != value))
				{
					this.OnSubmissionIP6Variant2Changing(value);
					this.SendPropertyChanging();
					this._SubmissionIP6Variant2 = value;
					this.SendPropertyChanged("SubmissionIP6Variant2");
					this.OnSubmissionIP6Variant2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefenseIP6", DbType="NVarChar(50)", CanBeNull=false)]
		public string DefenseIP6Start
		{
			get
			{
				return this._DefenseIP6;
			}
			set
			{
				if ((this._DefenseIP6 != value))
				{
					this.OnDefenseIP6StartChanging(value);
					this.SendPropertyChanging();
					this._DefenseIP6 = value;
					this.SendPropertyChanged("DefenseIP6Start");
					this.OnDefenseIP6StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefenseIP6Alternative", DbType="NVarChar(50)", CanBeNull=false)]
		public string DefenseIP6End
		{
			get
			{
				return this._DefenseIP6Alternative;
			}
			set
			{
				if ((this._DefenseIP6Alternative != value))
				{
					this.OnDefenseIP6EndChanging(value);
					this.SendPropertyChanging();
					this._DefenseIP6Alternative = value;
					this.SendPropertyChanged("DefenseIP6End");
					this.OnDefenseIP6EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExhibitionBachelorThesis", DbType="NVarChar(50)")]
		public string ExhibitionBachelorThesis
		{
			get
			{
				return this._ExhibitionBachelorThesis;
			}
			set
			{
				if ((this._ExhibitionBachelorThesis != value))
				{
					this.OnExhibitionBachelorThesisChanging(value);
					this.SendPropertyChanging();
					this._ExhibitionBachelorThesis = value;
					this.SendPropertyChanged("ExhibitionBachelorThesis");
					this.OnExhibitionBachelorThesisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="nchar(4)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SemesterActiveUntil", DbType="DateTime")]
		public System.Nullable<System.DateTime> DayBeforeNextSemester
		{
			get
			{
				return this._SemesterActiveUntil;
			}
			set
			{
				if ((this._SemesterActiveUntil != value))
				{
					this.OnDayBeforeNextSemesterChanging(value);
					this.SendPropertyChanging();
					this._SemesterActiveUntil = value;
					this.SendPropertyChanged("DayBeforeNextSemester");
					this.OnDayBeforeNextSemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefenseIP6BStart", DbType="NVarChar(50)")]
		public string DefenseIP6BStart
		{
			get
			{
				return this._DefenseIP6BStart;
			}
			set
			{
				if ((this._DefenseIP6BStart != value))
				{
					this.OnDefenseIP6BStartChanging(value);
					this.SendPropertyChanging();
					this._DefenseIP6BStart = value;
					this.SendPropertyChanged("DefenseIP6BStart");
					this.OnDefenseIP6BStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefenseIP6BEnd", DbType="NVarChar(50)")]
		public string DefenseIP6BEnd
		{
			get
			{
				return this._DefenseIP6BEnd;
			}
			set
			{
				if ((this._DefenseIP6BEnd != value))
				{
					this.OnDefenseIP6BEndChanging(value);
					this.SendPropertyChanging();
					this._DefenseIP6BEnd = value;
					this.SendPropertyChanged("DefenseIP6BEnd");
					this.OnDefenseIP6BEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Semester_Project", Storage="_Project", ThisKey="Id", OtherKey="SemesterId")]
		public EntitySet<Project> Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				this._Project.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Semester_Task", Storage="_Tasks", ThisKey="Id", OtherKey="SemesterId")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Project(Project entity)
		{
			this.SendPropertyChanging();
			entity.Semester = this;
		}
		
		private void detach_Project(Project entity)
		{
			this.SendPropertyChanging();
			entity.Semester = null;
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Semester = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Semester = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attachements")]
	public partial class Attachements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ROWGUID;
		
		private System.Data.Linq.Link<System.Data.Linq.Binary> _ProjectAttachement;
		
		private int _ProjectId;
		
		private string _UploadUser;
		
		private System.Nullable<System.DateTime> _UploadDate;
		
		private System.Nullable<decimal> _UploadSize;
		
		private bool _Deleted;
		
		private System.Nullable<System.DateTime> _DeletedDate;
		
		private string _FileName;
		
		private string _DeletedUser;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROWGUIDChanging(System.Guid value);
    partial void OnROWGUIDChanged();
    partial void OnProjectAttachementChanging(System.Data.Linq.Binary value);
    partial void OnProjectAttachementChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnUploadUserMailChanging(string value);
    partial void OnUploadUserMailChanged();
    partial void OnUploadDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUploadDateChanged();
    partial void OnUploadSizeChanging(System.Nullable<decimal> value);
    partial void OnUploadSizeChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDeletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnDeletedUserChanging(string value);
    partial void OnDeletedUserChanged();
    #endregion
		
		public Attachements()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROWGUID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid ROWGUID
		{
			get
			{
				return this._ROWGUID;
			}
			set
			{
				if ((this._ROWGUID != value))
				{
					this.OnROWGUIDChanging(value);
					this.SendPropertyChanging();
					this._ROWGUID = value;
					this.SendPropertyChanged("ROWGUID");
					this.OnROWGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectAttachement", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ProjectAttachement
		{
			get
			{
				return this._ProjectAttachement.Value;
			}
			set
			{
				if ((this._ProjectAttachement.Value != value))
				{
					this.OnProjectAttachementChanging(value);
					this.SendPropertyChanging();
					this._ProjectAttachement.Value = value;
					this.SendPropertyChanged("ProjectAttachement");
					this.OnProjectAttachementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UploadUser", Storage="_UploadUser", DbType="VarChar(50)")]
		public string UploadUserMail
		{
			get
			{
				return this._UploadUser;
			}
			set
			{
				if ((this._UploadUser != value))
				{
					this.OnUploadUserMailChanging(value);
					this.SendPropertyChanging();
					this._UploadUser = value;
					this.SendPropertyChanged("UploadUserMail");
					this.OnUploadUserMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UploadDate
		{
			get
			{
				return this._UploadDate;
			}
			set
			{
				if ((this._UploadDate != value))
				{
					this.OnUploadDateChanging(value);
					this.SendPropertyChanging();
					this._UploadDate = value;
					this.SendPropertyChanged("UploadDate");
					this.OnUploadDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadSize", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UploadSize
		{
			get
			{
				return this._UploadSize;
			}
			set
			{
				if ((this._UploadSize != value))
				{
					this.OnUploadSizeChanging(value);
					this.SendPropertyChanging();
					this._UploadSize = value;
					this.SendPropertyChanged("UploadSize");
					this.OnUploadSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDate
		{
			get
			{
				return this._DeletedDate;
			}
			set
			{
				if ((this._DeletedDate != value))
				{
					this.OnDeletedDateChanging(value);
					this.SendPropertyChanging();
					this._DeletedDate = value;
					this.SendPropertyChanged("DeletedDate");
					this.OnDeletedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(100)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedUser", DbType="VarChar(50)")]
		public string DeletedUser
		{
			get
			{
				return this._DeletedUser;
			}
			set
			{
				if ((this._DeletedUser != value))
				{
					this.OnDeletedUserChanging(value);
					this.SendPropertyChanging();
					this._DeletedUser = value;
					this.SendPropertyChanged("DeletedUser");
					this.OnDeletedUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Attachements", Storage="_Project", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Attachements.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Attachements.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDepartmentMap")]
	public partial class UserDepartmentMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mail;
		
		private System.Nullable<int> _DepartmentId;
		
		private bool _CanExportExcel;
		
		private bool _CanPublishProject;
		
		private bool _CanVisitAdminPage;
		
		private bool _CanSeeAllProjectsInProgress;
		
		private bool _CanEditAllProjects;
		
		private bool _CanSubmitAllProjects;
		
		private bool _CanSeeCreationDetails;
		
		private int _Id;
		
		private string _Name;
		
		private bool _CanBeAdvisor1;
		
		private bool _IsSupervisor;
		
		private bool _IsActive;
		
		private bool _CanReserveProjects;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Project> _Projects1;
		
		private EntitySet<Task> _Tasks;
		
		private EntitySet<Task> _Tasks1;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    partial void OnCanExportExcelChanging(bool value);
    partial void OnCanExportExcelChanged();
    partial void OnCanPublishProjectChanging(bool value);
    partial void OnCanPublishProjectChanged();
    partial void OnCanVisitAdminPageChanging(bool value);
    partial void OnCanVisitAdminPageChanged();
    partial void OnCanSeeAllProjectsInProgressChanging(bool value);
    partial void OnCanSeeAllProjectsInProgressChanged();
    partial void OnCanEditAllProjectsChanging(bool value);
    partial void OnCanEditAllProjectsChanged();
    partial void OnCanSubmitAllProjectsChanging(bool value);
    partial void OnCanSubmitAllProjectsChanged();
    partial void OnCanSeeCreationDetailsChanging(bool value);
    partial void OnCanSeeCreationDetailsChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCanBeAdvisor1Changing(bool value);
    partial void OnCanBeAdvisor1Changed();
    partial void OnIsSupervisorChanging(bool value);
    partial void OnIsSupervisorChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCanReserveProjectsChanging(bool value);
    partial void OnCanReserveProjectsChanged();
    #endregion
		
		public UserDepartmentMap()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Projects1 = new EntitySet<Project>(new Action<Project>(this.attach_Projects1), new Action<Project>(this.detach_Projects1));
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			this._Tasks1 = new EntitySet<Task>(new Action<Task>(this.attach_Tasks1), new Action<Task>(this.detach_Tasks1));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanExportExcel", DbType="Bit NOT NULL")]
		public bool CanExportExcel
		{
			get
			{
				return this._CanExportExcel;
			}
			set
			{
				if ((this._CanExportExcel != value))
				{
					this.OnCanExportExcelChanging(value);
					this.SendPropertyChanging();
					this._CanExportExcel = value;
					this.SendPropertyChanged("CanExportExcel");
					this.OnCanExportExcelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPublishProject", DbType="Bit NOT NULL")]
		public bool CanPublishProject
		{
			get
			{
				return this._CanPublishProject;
			}
			set
			{
				if ((this._CanPublishProject != value))
				{
					this.OnCanPublishProjectChanging(value);
					this.SendPropertyChanging();
					this._CanPublishProject = value;
					this.SendPropertyChanged("CanPublishProject");
					this.OnCanPublishProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanVisitAdminPage", DbType="Bit NOT NULL")]
		public bool CanVisitAdminPage
		{
			get
			{
				return this._CanVisitAdminPage;
			}
			set
			{
				if ((this._CanVisitAdminPage != value))
				{
					this.OnCanVisitAdminPageChanging(value);
					this.SendPropertyChanging();
					this._CanVisitAdminPage = value;
					this.SendPropertyChanged("CanVisitAdminPage");
					this.OnCanVisitAdminPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSeeAllProjectsInProgress", DbType="Bit NOT NULL")]
		public bool CanSeeAllProjectsInProgress
		{
			get
			{
				return this._CanSeeAllProjectsInProgress;
			}
			set
			{
				if ((this._CanSeeAllProjectsInProgress != value))
				{
					this.OnCanSeeAllProjectsInProgressChanging(value);
					this.SendPropertyChanging();
					this._CanSeeAllProjectsInProgress = value;
					this.SendPropertyChanged("CanSeeAllProjectsInProgress");
					this.OnCanSeeAllProjectsInProgressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEditAllProjects", DbType="Bit NOT NULL")]
		public bool CanEditAllProjects
		{
			get
			{
				return this._CanEditAllProjects;
			}
			set
			{
				if ((this._CanEditAllProjects != value))
				{
					this.OnCanEditAllProjectsChanging(value);
					this.SendPropertyChanging();
					this._CanEditAllProjects = value;
					this.SendPropertyChanged("CanEditAllProjects");
					this.OnCanEditAllProjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSubmitAllProjects", DbType="Bit NOT NULL")]
		public bool CanSubmitAllProjects
		{
			get
			{
				return this._CanSubmitAllProjects;
			}
			set
			{
				if ((this._CanSubmitAllProjects != value))
				{
					this.OnCanSubmitAllProjectsChanging(value);
					this.SendPropertyChanging();
					this._CanSubmitAllProjects = value;
					this.SendPropertyChanged("CanSubmitAllProjects");
					this.OnCanSubmitAllProjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanSeeCreationDetails", DbType="Bit NOT NULL")]
		public bool CanSeeCreationDetails
		{
			get
			{
				return this._CanSeeCreationDetails;
			}
			set
			{
				if ((this._CanSeeCreationDetails != value))
				{
					this.OnCanSeeCreationDetailsChanging(value);
					this.SendPropertyChanging();
					this._CanSeeCreationDetails = value;
					this.SendPropertyChanged("CanSeeCreationDetails");
					this.OnCanSeeCreationDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="int", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="varchar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeAdvisor1")]
		public bool CanBeAdvisor1
		{
			get
			{
				return this._CanBeAdvisor1;
			}
			set
			{
				if ((this._CanBeAdvisor1 != value))
				{
					this.OnCanBeAdvisor1Changing(value);
					this.SendPropertyChanging();
					this._CanBeAdvisor1 = value;
					this.SendPropertyChanged("CanBeAdvisor1");
					this.OnCanBeAdvisor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSupervisor", DbType="Bit NOT NULL")]
		public bool IsSupervisor
		{
			get
			{
				return this._IsSupervisor;
			}
			set
			{
				if ((this._IsSupervisor != value))
				{
					this.OnIsSupervisorChanging(value);
					this.SendPropertyChanging();
					this._IsSupervisor = value;
					this.SendPropertyChanged("IsSupervisor");
					this.OnIsSupervisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanReserveProjects", DbType="Bit NOT NULL")]
		public bool CanReserveProjects
		{
			get
			{
				return this._CanReserveProjects;
			}
			set
			{
				if ((this._CanReserveProjects != value))
				{
					this.OnCanReserveProjectsChanging(value);
					this.SendPropertyChanging();
					this._CanReserveProjects = value;
					this.SendPropertyChanged("CanReserveProjects");
					this.OnCanReserveProjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDepartmentMap_Project", Storage="_Projects", ThisKey="Id", OtherKey="Advisor1Id")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDepartmentMap_Project1", Storage="_Projects1", ThisKey="Id", OtherKey="Advisor2Id")]
		public EntitySet<Project> Projects1
		{
			get
			{
				return this._Projects1;
			}
			set
			{
				this._Projects1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDepartmentMap_Task", Storage="_Tasks", ThisKey="Id", OtherKey="SupervisorId")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDepartmentMap_Task1", Storage="_Tasks1", ThisKey="Id", OtherKey="ResponsibleUserId")]
		public EntitySet<Task> Tasks1
		{
			get
			{
				return this._Tasks1;
			}
			set
			{
				this._Tasks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_UserDepartmentMap", Storage="_Department", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.UserDepartmentMap.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.UserDepartmentMap.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Advisor1 = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Advisor1 = null;
		}
		
		private void attach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.Advisor2 = this;
		}
		
		private void detach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.Advisor2 = null;
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor = null;
		}
		
		private void attach_Tasks1(Task entity)
		{
			this.SendPropertyChanging();
			entity.ResponsibleUser = this;
		}
		
		private void detach_Tasks1(Task entity)
		{
			this.SendPropertyChanging();
			entity.ResponsibleUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskTypes")]
	public partial class TaskType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private int _DaysBetweenReminds;
		
		private EntitySet<Task> _Tasks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDaysBetweenRemindsChanging(int value);
    partial void OnDaysBetweenRemindsChanged();
    #endregion
		
		public TaskType()
		{
			this._Tasks = new EntitySet<Task>(new Action<Task>(this.attach_Tasks), new Action<Task>(this.detach_Tasks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysBetweenReminds", DbType="int")]
		public int DaysBetweenReminds
		{
			get
			{
				return this._DaysBetweenReminds;
			}
			set
			{
				if ((this._DaysBetweenReminds != value))
				{
					this.OnDaysBetweenRemindsChanging(value);
					this.SendPropertyChanging();
					this._DaysBetweenReminds = value;
					this.SendPropertyChanged("DaysBetweenReminds");
					this.OnDaysBetweenRemindsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskType_Task", Storage="_Tasks", ThisKey="Id", OtherKey="TaskTypeId")]
		public EntitySet<Task> Tasks
		{
			get
			{
				return this._Tasks;
			}
			set
			{
				this._Tasks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.TaskType = this;
		}
		
		private void detach_Tasks(Task entity)
		{
			this.SendPropertyChanging();
			entity.TaskType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tasks")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TaskType;
		
		private System.Nullable<int> _Project;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<int> _Supervisor;
		
		private System.Nullable<int> _ResponsibleUser;
		
		private System.Nullable<System.DateTime> _LastReminded;
		
		private bool _Done;
		
		private System.Nullable<int> _SemesterId;
		
		private System.Nullable<System.DateTime> _FirstReminded;
		
		private EntityRef<TaskType> _TaskType1;
		
		private EntityRef<UserDepartmentMap> _UserDepartmentMap;
		
		private EntityRef<UserDepartmentMap> _UserDepartmentMap1;
		
		private EntityRef<Project> _Project1;
		
		private EntityRef<Semester> _Semester;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaskTypeIdChanging(int value);
    partial void OnTaskTypeIdChanged();
    partial void OnProjectIdChanging(System.Nullable<int> value);
    partial void OnProjectIdChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnSupervisorIdChanging(System.Nullable<int> value);
    partial void OnSupervisorIdChanged();
    partial void OnResponsibleUserIdChanging(System.Nullable<int> value);
    partial void OnResponsibleUserIdChanged();
    partial void OnLastRemindedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRemindedChanged();
    partial void OnDoneChanging(bool value);
    partial void OnDoneChanged();
    partial void OnSemesterIdChanging(System.Nullable<int> value);
    partial void OnSemesterIdChanged();
    partial void OnFirstRemindedChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstRemindedChanged();
    #endregion
		
		public Task()
		{
			this._TaskType1 = default(EntityRef<TaskType>);
			this._UserDepartmentMap = default(EntityRef<UserDepartmentMap>);
			this._UserDepartmentMap1 = default(EntityRef<UserDepartmentMap>);
			this._Project1 = default(EntityRef<Project>);
			this._Semester = default(EntityRef<Semester>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskType", DbType="Int NOT NULL")]
		public int TaskTypeId
		{
			get
			{
				return this._TaskType;
			}
			set
			{
				if ((this._TaskType != value))
				{
					if (this._TaskType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaskTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TaskType = value;
					this.SendPropertyChanged("TaskTypeId");
					this.OnTaskTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="Int")]
		public System.Nullable<int> ProjectId
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					if (this._Project1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supervisor", DbType="Int")]
		public System.Nullable<int> SupervisorId
		{
			get
			{
				return this._Supervisor;
			}
			set
			{
				if ((this._Supervisor != value))
				{
					if (this._UserDepartmentMap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisorIdChanging(value);
					this.SendPropertyChanging();
					this._Supervisor = value;
					this.SendPropertyChanged("SupervisorId");
					this.OnSupervisorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponsibleUser", DbType="Int")]
		public System.Nullable<int> ResponsibleUserId
		{
			get
			{
				return this._ResponsibleUser;
			}
			set
			{
				if ((this._ResponsibleUser != value))
				{
					if (this._UserDepartmentMap1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResponsibleUserIdChanging(value);
					this.SendPropertyChanging();
					this._ResponsibleUser = value;
					this.SendPropertyChanged("ResponsibleUserId");
					this.OnResponsibleUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReminded", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReminded
		{
			get
			{
				return this._LastReminded;
			}
			set
			{
				if ((this._LastReminded != value))
				{
					this.OnLastRemindedChanging(value);
					this.SendPropertyChanging();
					this._LastReminded = value;
					this.SendPropertyChanged("LastReminded");
					this.OnLastRemindedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Done", DbType="bit")]
		public bool Done
		{
			get
			{
				return this._Done;
			}
			set
			{
				if ((this._Done != value))
				{
					this.OnDoneChanging(value);
					this.SendPropertyChanging();
					this._Done = value;
					this.SendPropertyChanged("Done");
					this.OnDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SemesterId", DbType="int")]
		public System.Nullable<int> SemesterId
		{
			get
			{
				return this._SemesterId;
			}
			set
			{
				if ((this._SemesterId != value))
				{
					if (this._Semester.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSemesterIdChanging(value);
					this.SendPropertyChanging();
					this._SemesterId = value;
					this.SendPropertyChanged("SemesterId");
					this.OnSemesterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstReminded", DbType="DateTime")]
		public System.Nullable<System.DateTime> FirstReminded
		{
			get
			{
				return this._FirstReminded;
			}
			set
			{
				if ((this._FirstReminded != value))
				{
					this.OnFirstRemindedChanging(value);
					this.SendPropertyChanging();
					this._FirstReminded = value;
					this.SendPropertyChanged("FirstReminded");
					this.OnFirstRemindedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaskType_Task", Storage="_TaskType1", ThisKey="TaskTypeId", OtherKey="Id", IsForeignKey=true)]
		public TaskType TaskType
		{
			get
			{
				return this._TaskType1.Entity;
			}
			set
			{
				TaskType previousValue = this._TaskType1.Entity;
				if (((previousValue != value) 
							|| (this._TaskType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaskType1.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._TaskType1.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._TaskType = value.Id;
					}
					else
					{
						this._TaskType = default(int);
					}
					this.SendPropertyChanged("TaskType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDepartmentMap_Task", Storage="_UserDepartmentMap", ThisKey="SupervisorId", OtherKey="Id", IsForeignKey=true)]
		public UserDepartmentMap Supervisor
		{
			get
			{
				return this._UserDepartmentMap.Entity;
			}
			set
			{
				UserDepartmentMap previousValue = this._UserDepartmentMap.Entity;
				if (((previousValue != value) 
							|| (this._UserDepartmentMap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserDepartmentMap.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._UserDepartmentMap.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._Supervisor = value.Id;
					}
					else
					{
						this._Supervisor = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supervisor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDepartmentMap_Task1", Storage="_UserDepartmentMap1", ThisKey="ResponsibleUserId", OtherKey="Id", IsForeignKey=true)]
		public UserDepartmentMap ResponsibleUser
		{
			get
			{
				return this._UserDepartmentMap1.Entity;
			}
			set
			{
				UserDepartmentMap previousValue = this._UserDepartmentMap1.Entity;
				if (((previousValue != value) 
							|| (this._UserDepartmentMap1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserDepartmentMap1.Entity = null;
						previousValue.Tasks1.Remove(this);
					}
					this._UserDepartmentMap1.Entity = value;
					if ((value != null))
					{
						value.Tasks1.Add(this);
						this._ResponsibleUser = value.Id;
					}
					else
					{
						this._ResponsibleUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("ResponsibleUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Task", Storage="_Project1", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project1.Entity;
			}
			set
			{
				Project previousValue = this._Project1.Entity;
				if (((previousValue != value) 
							|| (this._Project1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project1.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._Project1.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._Project = value.Id;
					}
					else
					{
						this._Project = default(Nullable<int>);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Semester_Task", Storage="_Semester", ThisKey="SemesterId", OtherKey="Id", IsForeignKey=true)]
		public Semester Semester
		{
			get
			{
				return this._Semester.Entity;
			}
			set
			{
				Semester previousValue = this._Semester.Entity;
				if (((previousValue != value) 
							|| (this._Semester.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Semester.Entity = null;
						previousValue.Tasks.Remove(this);
					}
					this._Semester.Entity = value;
					if ((value != null))
					{
						value.Tasks.Add(this);
						this._SemesterId = value.Id;
					}
					else
					{
						this._SemesterId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Semester");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
