#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProStudCreator
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-ProStudCreator-20140818043155")]
	public partial class ProStudentCreatorDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertProjectTeamSize(ProjectTeamSize instance);
    partial void UpdateProjectTeamSize(ProjectTeamSize instance);
    partial void DeleteProjectTeamSize(ProjectTeamSize instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjectType(ProjectType instance);
    partial void UpdateProjectType(ProjectType instance);
    partial void DeleteProjectType(ProjectType instance);
    #endregion
		
		public ProStudentCreatorDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["local_dummyConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProStudentCreatorDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProStudentCreatorDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProStudentCreatorDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProStudentCreatorDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<ProjectTeamSize> ProjectTeamSizes
		{
			get
			{
				return this.GetTable<ProjectTeamSize>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProjectType> ProjectTypes
		{
			get
			{
				return this.GetTable<ProjectType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DepartmentName;
		
		private string _OUCode;
		
		private EntitySet<Project> _Projects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnOUCodeChanging(string value);
    partial void OnOUCodeChanged();
    #endregion
		
		public Department()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OUCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OUCode
		{
			get
			{
				return this._OUCode;
			}
			set
			{
				if ((this._OUCode != value))
				{
					this.OnOUCodeChanging(value);
					this.SendPropertyChanging();
					this._OUCode = value;
					this.SendPropertyChanged("OUCode");
					this.OnOUCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Project", Storage="_Projects", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectTeamSize")]
	public partial class ProjectTeamSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _Size1;
		
		private bool _Size2;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Project> _Projects1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSize1Changing(bool value);
    partial void OnSize1Changed();
    partial void OnSize2Changing(bool value);
    partial void OnSize2Changed();
    #endregion
		
		public ProjectTeamSize()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Projects1 = new EntitySet<Project>(new Action<Project>(this.attach_Projects1), new Action<Project>(this.detach_Projects1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size1", DbType="Bit NOT NULL")]
		public bool Size1
		{
			get
			{
				return this._Size1;
			}
			set
			{
				if ((this._Size1 != value))
				{
					this.OnSize1Changing(value);
					this.SendPropertyChanging();
					this._Size1 = value;
					this.SendPropertyChanged("Size1");
					this.OnSize1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size2", DbType="Bit NOT NULL")]
		public bool Size2
		{
			get
			{
				return this._Size2;
			}
			set
			{
				if ((this._Size2 != value))
				{
					this.OnSize2Changing(value);
					this.SendPropertyChanging();
					this._Size2 = value;
					this.SendPropertyChanged("Size2");
					this.OnSize2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectTeamSize_Project", Storage="_Projects", ThisKey="Id", OtherKey="P1TeamSizeId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectTeamSize_Project1", Storage="_Projects1", ThisKey="Id", OtherKey="P2TeamSizeId")]
		public EntitySet<Project> Projects1
		{
			get
			{
				return this._Projects1;
			}
			set
			{
				this._Projects1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.POneTeamSize = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.POneTeamSize = null;
		}
		
		private void attach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PTwoTeamSize = this;
		}
		
		private void detach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PTwoTeamSize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Creator;
		
		private string _Employer;
		
		private string _EmployerEmail;
		
		private string _Advisor;
		
		private string _Advisor2;
		
		private string _AdvisorMail;
		
		private string _AdvisorMail2;
		
		private bool _TypeDesignUX;
		
		private bool _TypeHW;
		
		private bool _TypeCGIP;
		
		private bool _TypeMathAlg;
		
		private bool _TypeAppWeb;
		
		private bool _TypeDBBigData;
		
		private int _POneTypeId;
		
		private int _POneTeamSizeId;
		
		private System.Nullable<int> _PTwoTypeId;
		
		private System.Nullable<int> _PTwoTeamSizeId;
		
		private string _InitialPosition;
		
		private System.Data.Linq.Binary _Picture;
		
		private string _Objective;
		
		private string _ProblemStatement;
		
		private string _References;
		
		private string _Remarks;
		
		private string _ReservationNameOne;
		
		private string _ReservationNameTwo;
		
		private bool _Important;
		
		private global::ProStudCreator.ProjectState _Published;
		
		private int _DepartmentId;
		
		private bool _OverOnePage;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _ModificationDate;
		
		private System.DateTime _PublishedDate;
		
		private string _LastEditedBy;
		
		private int _ProjectNr;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<ProjectTeamSize> _POneTeamSize;
		
		private EntityRef<ProjectTeamSize> _PTwoTeamSize;
		
		private EntityRef<ProjectType> _POneType;
		
		private EntityRef<ProjectType> _PTwoType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatorChanging(string value);
    partial void OnCreatorChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnClientMailChanging(string value);
    partial void OnClientMailChanged();
    partial void OnAdvisor1NameChanging(string value);
    partial void OnAdvisor1NameChanged();
    partial void OnAdvisor2NameChanging(string value);
    partial void OnAdvisor2NameChanged();
    partial void OnAdvisor1MailChanging(string value);
    partial void OnAdvisor1MailChanged();
    partial void OnAdvisor2MailChanging(string value);
    partial void OnAdvisor2MailChanged();
    partial void OnTypeDesignUXChanging(bool value);
    partial void OnTypeDesignUXChanged();
    partial void OnTypeHWChanging(bool value);
    partial void OnTypeHWChanged();
    partial void OnTypeCGIPChanging(bool value);
    partial void OnTypeCGIPChanged();
    partial void OnTypeMathAlgChanging(bool value);
    partial void OnTypeMathAlgChanged();
    partial void OnTypeAppWebChanging(bool value);
    partial void OnTypeAppWebChanged();
    partial void OnTypeDBBigDataChanging(bool value);
    partial void OnTypeDBBigDataChanged();
    partial void OnP1TypeIdChanging(int value);
    partial void OnP1TypeIdChanged();
    partial void OnP1TeamSizeIdChanging(int value);
    partial void OnP1TeamSizeIdChanged();
    partial void OnP2TypeIdChanging(System.Nullable<int> value);
    partial void OnP2TypeIdChanged();
    partial void OnP2TeamSizeIdChanging(System.Nullable<int> value);
    partial void OnP2TeamSizeIdChanged();
    partial void OnInitialPositionChanging(string value);
    partial void OnInitialPositionChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnObjectiveChanging(string value);
    partial void OnObjectiveChanged();
    partial void OnProblemStatementChanging(string value);
    partial void OnProblemStatementChanged();
    partial void OnReferencesChanging(string value);
    partial void OnReferencesChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnReservation1NameChanging(string value);
    partial void OnReservation1NameChanged();
    partial void OnReservation2NameChanging(string value);
    partial void OnReservation2NameChanged();
    partial void OnImportantChanging(bool value);
    partial void OnImportantChanged();
    partial void OnStateChanging(global::ProStudCreator.ProjectState value);
    partial void OnStateChanged();
    partial void OnDepartmentIdChanging(int value);
    partial void OnDepartmentIdChanged();
    partial void OnOverOnePageChanging(bool value);
    partial void OnOverOnePageChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModificationDateChanging(System.DateTime value);
    partial void OnModificationDateChanged();
    partial void OnPublishedDateChanging(System.DateTime value);
    partial void OnPublishedDateChanged();
    partial void OnLastEditedByChanging(string value);
    partial void OnLastEditedByChanged();
    partial void OnProjectNrChanging(int value);
    partial void OnProjectNrChanged();
    #endregion
		
		public Project()
		{
			this._Department = default(EntityRef<Department>);
			this._POneTeamSize = default(EntityRef<ProjectTeamSize>);
			this._PTwoTeamSize = default(EntityRef<ProjectTeamSize>);
			this._POneType = default(EntityRef<ProjectType>);
			this._PTwoType = default(EntityRef<ProjectType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creator", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Creator
		{
			get
			{
				return this._Creator;
			}
			set
			{
				if ((this._Creator != value))
				{
					this.OnCreatorChanging(value);
					this.SendPropertyChanging();
					this._Creator = value;
					this.SendPropertyChanged("Creator");
					this.OnCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employer", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._Employer;
			}
			set
			{
				if ((this._Employer != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._Employer = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployerEmail", DbType="NVarChar(100)", CanBeNull=false)]
		public string ClientMail
		{
			get
			{
				return this._EmployerEmail;
			}
			set
			{
				if ((this._EmployerEmail != value))
				{
					this.OnClientMailChanging(value);
					this.SendPropertyChanging();
					this._EmployerEmail = value;
					this.SendPropertyChanged("ClientMail");
					this.OnClientMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advisor", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Advisor1Name
		{
			get
			{
				return this._Advisor;
			}
			set
			{
				if ((this._Advisor != value))
				{
					this.OnAdvisor1NameChanging(value);
					this.SendPropertyChanging();
					this._Advisor = value;
					this.SendPropertyChanged("Advisor1Name");
					this.OnAdvisor1NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advisor2", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Advisor2Name
		{
			get
			{
				return this._Advisor2;
			}
			set
			{
				if ((this._Advisor2 != value))
				{
					this.OnAdvisor2NameChanging(value);
					this.SendPropertyChanging();
					this._Advisor2 = value;
					this.SendPropertyChanged("Advisor2Name");
					this.OnAdvisor2NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisorMail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Advisor1Mail
		{
			get
			{
				return this._AdvisorMail;
			}
			set
			{
				if ((this._AdvisorMail != value))
				{
					this.OnAdvisor1MailChanging(value);
					this.SendPropertyChanging();
					this._AdvisorMail = value;
					this.SendPropertyChanged("Advisor1Mail");
					this.OnAdvisor1MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisorMail2", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Advisor2Mail
		{
			get
			{
				return this._AdvisorMail2;
			}
			set
			{
				if ((this._AdvisorMail2 != value))
				{
					this.OnAdvisor2MailChanging(value);
					this.SendPropertyChanging();
					this._AdvisorMail2 = value;
					this.SendPropertyChanged("Advisor2Mail");
					this.OnAdvisor2MailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDesignUX", DbType="Bit NOT NULL")]
		public bool TypeDesignUX
		{
			get
			{
				return this._TypeDesignUX;
			}
			set
			{
				if ((this._TypeDesignUX != value))
				{
					this.OnTypeDesignUXChanging(value);
					this.SendPropertyChanging();
					this._TypeDesignUX = value;
					this.SendPropertyChanged("TypeDesignUX");
					this.OnTypeDesignUXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeHW", DbType="Bit NOT NULL")]
		public bool TypeHW
		{
			get
			{
				return this._TypeHW;
			}
			set
			{
				if ((this._TypeHW != value))
				{
					this.OnTypeHWChanging(value);
					this.SendPropertyChanging();
					this._TypeHW = value;
					this.SendPropertyChanged("TypeHW");
					this.OnTypeHWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCGIP", DbType="Bit NOT NULL")]
		public bool TypeCGIP
		{
			get
			{
				return this._TypeCGIP;
			}
			set
			{
				if ((this._TypeCGIP != value))
				{
					this.OnTypeCGIPChanging(value);
					this.SendPropertyChanging();
					this._TypeCGIP = value;
					this.SendPropertyChanged("TypeCGIP");
					this.OnTypeCGIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeMathAlg", DbType="Bit NOT NULL")]
		public bool TypeMathAlg
		{
			get
			{
				return this._TypeMathAlg;
			}
			set
			{
				if ((this._TypeMathAlg != value))
				{
					this.OnTypeMathAlgChanging(value);
					this.SendPropertyChanging();
					this._TypeMathAlg = value;
					this.SendPropertyChanged("TypeMathAlg");
					this.OnTypeMathAlgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeAppWeb", DbType="Bit NOT NULL")]
		public bool TypeAppWeb
		{
			get
			{
				return this._TypeAppWeb;
			}
			set
			{
				if ((this._TypeAppWeb != value))
				{
					this.OnTypeAppWebChanging(value);
					this.SendPropertyChanging();
					this._TypeAppWeb = value;
					this.SendPropertyChanged("TypeAppWeb");
					this.OnTypeAppWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDBBigData", DbType="Bit NOT NULL")]
		public bool TypeDBBigData
		{
			get
			{
				return this._TypeDBBigData;
			}
			set
			{
				if ((this._TypeDBBigData != value))
				{
					this.OnTypeDBBigDataChanging(value);
					this.SendPropertyChanging();
					this._TypeDBBigData = value;
					this.SendPropertyChanged("TypeDBBigData");
					this.OnTypeDBBigDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POneTypeId", DbType="Int NOT NULL")]
		public int P1TypeId
		{
			get
			{
				return this._POneTypeId;
			}
			set
			{
				if ((this._POneTypeId != value))
				{
					if (this._POneType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP1TypeIdChanging(value);
					this.SendPropertyChanging();
					this._POneTypeId = value;
					this.SendPropertyChanged("P1TypeId");
					this.OnP1TypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POneTeamSizeId", DbType="Int NOT NULL")]
		public int P1TeamSizeId
		{
			get
			{
				return this._POneTeamSizeId;
			}
			set
			{
				if ((this._POneTeamSizeId != value))
				{
					if (this._POneTeamSize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP1TeamSizeIdChanging(value);
					this.SendPropertyChanging();
					this._POneTeamSizeId = value;
					this.SendPropertyChanged("P1TeamSizeId");
					this.OnP1TeamSizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTwoTypeId", DbType="Int")]
		public System.Nullable<int> P2TypeId
		{
			get
			{
				return this._PTwoTypeId;
			}
			set
			{
				if ((this._PTwoTypeId != value))
				{
					if (this._PTwoType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP2TypeIdChanging(value);
					this.SendPropertyChanging();
					this._PTwoTypeId = value;
					this.SendPropertyChanged("P2TypeId");
					this.OnP2TypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PTwoTeamSizeId", DbType="Int")]
		public System.Nullable<int> P2TeamSizeId
		{
			get
			{
				return this._PTwoTeamSizeId;
			}
			set
			{
				if ((this._PTwoTeamSizeId != value))
				{
					if (this._PTwoTeamSize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnP2TeamSizeIdChanging(value);
					this.SendPropertyChanging();
					this._PTwoTeamSizeId = value;
					this.SendPropertyChanged("P2TeamSizeId");
					this.OnP2TeamSizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialPosition", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InitialPosition
		{
			get
			{
				return this._InitialPosition;
			}
			set
			{
				if ((this._InitialPosition != value))
				{
					this.OnInitialPositionChanging(value);
					this.SendPropertyChanging();
					this._InitialPosition = value;
					this.SendPropertyChanged("InitialPosition");
					this.OnInitialPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Objective", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Objective
		{
			get
			{
				return this._Objective;
			}
			set
			{
				if ((this._Objective != value))
				{
					this.OnObjectiveChanging(value);
					this.SendPropertyChanging();
					this._Objective = value;
					this.SendPropertyChanged("Objective");
					this.OnObjectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProblemStatement", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProblemStatement
		{
			get
			{
				return this._ProblemStatement;
			}
			set
			{
				if ((this._ProblemStatement != value))
				{
					this.OnProblemStatementChanging(value);
					this.SendPropertyChanging();
					this._ProblemStatement = value;
					this.SendPropertyChanged("ProblemStatement");
					this.OnProblemStatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[References]", Storage="_References", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string References
		{
			get
			{
				return this._References;
			}
			set
			{
				if ((this._References != value))
				{
					this.OnReferencesChanging(value);
					this.SendPropertyChanging();
					this._References = value;
					this.SendPropertyChanged("References");
					this.OnReferencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationNameOne", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Reservation1Name
		{
			get
			{
				return this._ReservationNameOne;
			}
			set
			{
				if ((this._ReservationNameOne != value))
				{
					this.OnReservation1NameChanging(value);
					this.SendPropertyChanging();
					this._ReservationNameOne = value;
					this.SendPropertyChanged("Reservation1Name");
					this.OnReservation1NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReservationNameTwo", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Reservation2Name
		{
			get
			{
				return this._ReservationNameTwo;
			}
			set
			{
				if ((this._ReservationNameTwo != value))
				{
					this.OnReservation2NameChanging(value);
					this.SendPropertyChanging();
					this._ReservationNameTwo = value;
					this.SendPropertyChanged("Reservation2Name");
					this.OnReservation2NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Important", DbType="Bit NOT NULL")]
		public bool Important
		{
			get
			{
				return this._Important;
			}
			set
			{
				if ((this._Important != value))
				{
					this.OnImportantChanging(value);
					this.SendPropertyChanging();
					this._Important = value;
					this.SendPropertyChanged("Important");
					this.OnImportantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Published", DbType="int NOT NULL", CanBeNull=false)]
		public global::ProStudCreator.ProjectState State
		{
			get
			{
				return this._Published;
			}
			set
			{
				if ((this._Published != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._Published = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int NOT NULL")]
		public int DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OverOnePage", DbType="Bit NOT NULL")]
		public bool OverOnePage
		{
			get
			{
				return this._OverOnePage;
			}
			set
			{
				if ((this._OverOnePage != value))
				{
					this.OnOverOnePageChanging(value);
					this.SendPropertyChanging();
					this._OverOnePage = value;
					this.SendPropertyChanged("OverOnePage");
					this.OnOverOnePageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModificationDate
		{
			get
			{
				return this._ModificationDate;
			}
			set
			{
				if ((this._ModificationDate != value))
				{
					this.OnModificationDateChanging(value);
					this.SendPropertyChanging();
					this._ModificationDate = value;
					this.SendPropertyChanged("ModificationDate");
					this.OnModificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublishedDate
		{
			get
			{
				return this._PublishedDate;
			}
			set
			{
				if ((this._PublishedDate != value))
				{
					this.OnPublishedDateChanging(value);
					this.SendPropertyChanging();
					this._PublishedDate = value;
					this.SendPropertyChanged("PublishedDate");
					this.OnPublishedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEditedBy", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LastEditedBy
		{
			get
			{
				return this._LastEditedBy;
			}
			set
			{
				if ((this._LastEditedBy != value))
				{
					this.OnLastEditedByChanging(value);
					this.SendPropertyChanging();
					this._LastEditedBy = value;
					this.SendPropertyChanged("LastEditedBy");
					this.OnLastEditedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNr", DbType="int NOT NULL")]
		public int ProjectNr
		{
			get
			{
				return this._ProjectNr;
			}
			set
			{
				if ((this._ProjectNr != value))
				{
					this.OnProjectNrChanging(value);
					this.SendPropertyChanging();
					this._ProjectNr = value;
					this.SendPropertyChanged("ProjectNr");
					this.OnProjectNrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Project", Storage="_Department", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(int);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectTeamSize_Project", Storage="_POneTeamSize", ThisKey="P1TeamSizeId", OtherKey="Id", IsForeignKey=true)]
		public ProjectTeamSize POneTeamSize
		{
			get
			{
				return this._POneTeamSize.Entity;
			}
			set
			{
				ProjectTeamSize previousValue = this._POneTeamSize.Entity;
				if (((previousValue != value) 
							|| (this._POneTeamSize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POneTeamSize.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._POneTeamSize.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._POneTeamSizeId = value.Id;
					}
					else
					{
						this._POneTeamSizeId = default(int);
					}
					this.SendPropertyChanged("POneTeamSize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectTeamSize_Project1", Storage="_PTwoTeamSize", ThisKey="P2TeamSizeId", OtherKey="Id", IsForeignKey=true)]
		public ProjectTeamSize PTwoTeamSize
		{
			get
			{
				return this._PTwoTeamSize.Entity;
			}
			set
			{
				ProjectTeamSize previousValue = this._PTwoTeamSize.Entity;
				if (((previousValue != value) 
							|| (this._PTwoTeamSize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTwoTeamSize.Entity = null;
						previousValue.Projects1.Remove(this);
					}
					this._PTwoTeamSize.Entity = value;
					if ((value != null))
					{
						value.Projects1.Add(this);
						this._PTwoTeamSizeId = value.Id;
					}
					else
					{
						this._PTwoTeamSizeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PTwoTeamSize");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project", Storage="_POneType", ThisKey="P1TypeId", OtherKey="Id", IsForeignKey=true)]
		public ProjectType POneType
		{
			get
			{
				return this._POneType.Entity;
			}
			set
			{
				ProjectType previousValue = this._POneType.Entity;
				if (((previousValue != value) 
							|| (this._POneType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POneType.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._POneType.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._POneTypeId = value.Id;
					}
					else
					{
						this._POneTypeId = default(int);
					}
					this.SendPropertyChanged("POneType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project1", Storage="_PTwoType", ThisKey="P2TypeId", OtherKey="Id", IsForeignKey=true)]
		public ProjectType PTwoType
		{
			get
			{
				return this._PTwoType.Entity;
			}
			set
			{
				ProjectType previousValue = this._PTwoType.Entity;
				if (((previousValue != value) 
							|| (this._PTwoType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PTwoType.Entity = null;
						previousValue.Projects1.Remove(this);
					}
					this._PTwoType.Entity = value;
					if ((value != null))
					{
						value.Projects1.Add(this);
						this._PTwoTypeId = value.Id;
					}
					else
					{
						this._PTwoTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("PTwoType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectTypes")]
	public partial class ProjectType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
		private bool _P5;
		
		private bool _P6;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Project> _Projects1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnP5Changing(bool value);
    partial void OnP5Changed();
    partial void OnP6Changing(bool value);
    partial void OnP6Changed();
    #endregion
		
		public ProjectType()
		{
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Projects1 = new EntitySet<Project>(new Action<Project>(this.attach_Projects1), new Action<Project>(this.detach_Projects1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P5", DbType="Bit NOT NULL")]
		public bool P5
		{
			get
			{
				return this._P5;
			}
			set
			{
				if ((this._P5 != value))
				{
					this.OnP5Changing(value);
					this.SendPropertyChanging();
					this._P5 = value;
					this.SendPropertyChanged("P5");
					this.OnP5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P6", DbType="Bit NOT NULL")]
		public bool P6
		{
			get
			{
				return this._P6;
			}
			set
			{
				if ((this._P6 != value))
				{
					this.OnP6Changing(value);
					this.SendPropertyChanging();
					this._P6 = value;
					this.SendPropertyChanged("P6");
					this.OnP6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project", Storage="_Projects", ThisKey="Id", OtherKey="P1TypeId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectType_Project1", Storage="_Projects1", ThisKey="Id", OtherKey="P2TypeId")]
		public EntitySet<Project> Projects1
		{
			get
			{
				return this._Projects1;
			}
			set
			{
				this._Projects1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.POneType = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.POneType = null;
		}
		
		private void attach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PTwoType = this;
		}
		
		private void detach_Projects1(Project entity)
		{
			this.SendPropertyChanging();
			entity.PTwoType = null;
		}
	}
}
#pragma warning restore 1591
